curl http://localhost:3001/api/occupancy/live-summary






const express = require('express');
 const router  = express.Router();
 const controller = require('../controllers/occupancy.controller');

 // existing endpoints
 router.get('/live',       controller.getLiveOccupancy);
 router.get('/history/:location', controller.getHistoricalOccupancy);

+// new: live headcount summary (region + per-partition)
+router.get('/live-summary', controller.getLiveSummary);

 module.exports = router;





// src/controllers/occupancy.controller.js

const service = require('../services/occupancy.service');

/**
 * (unchanged) returns all raw swipe records for today
 */
exports.getLiveOccupancy = async (req, res) => {
  try {
    const data = await service.fetchLiveOccupancy();
    res.json({ success: true, count: data.length, data });
  } catch (err) {
    console.error(err);
    res.status(500).json({ success: false, message: 'Live occupancy fetch failed' });
  }
};

/**
 * New: returns a “summary” of who’s currently in-office,
 * plus the same detail list of those still present.
 */
exports.getLiveSummary = async (req, res) => {
  try {
    // 1. get all today’s swipe records
    const allSwipes = await service.fetchLiveOccupancy();

    // 2. pick each person’s last swipe of the day
    const lastByPerson = {};
    allSwipes.forEach(rec => {
      const prev = lastByPerson[rec.PersonGUID];
      if (!prev || new Date(rec.LocaleMessageTime) > new Date(prev.LocaleMessageTime)) {
        lastByPerson[rec.PersonGUID] = rec;
      }
    });

    // 3. filter to those whose last swipe is InDirection (i.e. still in-office)
    const present = Object.values(lastByPerson).filter(r => r.Direction === 'InDirection');

    // 4. build region and per-partition aggregates
    const region = { total: 0, Employee: 0, Contractor: 0 };
    const partitions = {}; // e.g. { 'AR.Cordoba': { total, Employee, Contractor }, … }

    present.forEach(r => {
      // region
      region.total++;
      if (r.PersonnelType === 'Employee') region.Employee++;
      else region.Contractor++;

      // per-partition
      const p = r.PartitionName2;
      if (!partitions[p]) {
        partitions[p] = { total: 0, Employee: 0, Contractor: 0 };
      }
      partitions[p].total++;
      if (r.PersonnelType === 'Employee') partitions[p].Employee++;
      else partitions[p].Contractor++;
    });

    // 5. respond
    res.json({
      success: true,
      summary: {
        region: 'LACA',
        ...region,       // { total, Employee, Contractor }
        partitions       // { 'AR.Cordoba': { … }, … }
      },
      details: present  // the array of swipe‐records still present
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({ success: false, message: 'Live summary fetch failed' });
  }
};

/**
 * (unchanged) historical detail
 */
exports.getHistoricalOccupancy = async (req, res) => {
  const { location } = req.params;
  try {
    const data = await service.fetchHistoricalOccupancy(location);
    res.json({ success: true, count: data.length, data });
  } catch (err) {
    console.error(err);
    res.status(500).json({ success: false, message: 'Historical occupancy fetch failed' });
  }
};











Good We are getting API Responce like this 

http://localhost:3001/api/occupancy/live

{
  "success": true,
  "count": 107,
  "data": [
    {
      "LocaleMessageTime": "2025-06-13T00:00:08.000Z",
      "Dateonly": "2025-06-13",
      "Swipe_Time": "00:00:08",
      "EmployeeID": "W0022873",
      "PersonGUID": "98DA6E7A-3EE1-47AA-B843-599EB1A6EF21",
      "ObjectName1": "Hernandez, Sofia",
      "PersonnelType": "Contractor",
      "CardNumber": "612791",
      "AdmitCode": "Admit",
      "Direction": "OutDirection",
      "Door": "LACA CR E3 Emergency Elevators Door"
    },
    {
      "LocaleMessageTime": "2025-06-13T00:00:16.000Z",
      "Dateonly": "2025-06-13",
      "Swipe_Time": "00:00:16",
      "EmployeeID": "W0026430",
      "PersonGUID": "5E48DF0A-8926-4635-894B-0CCB5F63EF94",
      "ObjectName1": "Reyes, Angela",
      "PersonnelType": "Contractor",
      "CardNumber": "617103",
      "AdmitCode": "Admit",
      "Direction": "OutDirection",
      "Door": "LACA CR B1 Main Lobby Door"
    },



Expected Outut is like 
for Live Occupancy 

Region -LACA 
Total HeadCount --- Current day
Employee (Count) -----Current day
Contractor (Count ) -- Current day

and -Laca 
Live HeadCount --Currently present in office Count as per door in Out Direction 
Current headCount we have Door List we can define ex-
  {
      "LocaleMessageTime": "2025-06-13T00:00:08.000Z",
      "Dateonly": "2025-06-13",
      "Swipe_Time": "00:00:08",
      "EmployeeID": "W0022873",
      "PersonGUID": "98DA6E7A-3EE1-47AA-B843-599EB1A6EF21",
      "ObjectName1": "Hernandez, Sofia",
      "PersonnelType": "Contractor",
      "CardNumber": "612791",
      "AdmitCode": "Admit",
      "Direction": "OutDirection",
      "Door": "LACA CR E3 Emergency Elevators Door"
    },

door name -Direction -Floor 

then display their count on Specific Floor or 
if direction -Floor -OutofOffice  remove their count from Current HeadCount and store their count on today HeadCount .
like.



Live EmployeeCount
Live ContractorCount 

then Terir partation like 
Region-Laca =100 (Employee -75, Contractr -25 )
 'AR.Cordoba'-10 (Employee -7, Contractor-3)-- same for all 
  'BR.Sao Paulo'-20
  'CR.Costa Rica Partition'-30
  'MX.Mexico City'-15
  'PA.Panama City'-10
  'PE.Lima'-15



For History if i want to see HeadCount Reports for Laca ('AR.Cordoba, 'BR.Sao Paulo'
  'CR.Costa Rica Partition'
  'MX.Mexico City'
  'PA.Panama City'
  'PE.Lima')

for specific date then i want result like 

if i select laca-12-06-2025
Region-Laca =100 (Employee -75, Contractr -25 )
 'AR.Cordoba'-10 (Employee -7, Contractor-3)-- same for all 
  'BR.Sao Paulo'-20
  'CR.Costa Rica Partition'-30
  'MX.Mexico City'-15
  'PA.Panama City'-10
  'PE.Lima'-15

as well details 

if i select only  AR.Cordoba'then display  (Employee -7, Contractor-3)
as well details .



http://localhost:3001/api/occupancy/history/AR.Cordoba

{
  "success": true,
  "count": 4988,
  "data": [
    {
      "ObjectName1": "Argentina, VIS_ARG_010 010",
      "PersonnelType": "Visitor",
      "EmployeeID": "",
      "text5": "Buenos Aires - Montevideo 825",
      "PartitionName2": "AR.Cordoba",
      "MessageType": "CardAdmitted",
      "Date": "2025-05-14T00:00:00.000Z"
    },
    {
      "ObjectName1": "Argentina, VIS_ARG_019 019",
      "PersonnelType": "Visitor",
      "EmployeeID": "",
      "text5": "Buenos Aires - Montevideo 825",
      "PartitionName2": "AR.Cordoba",
      "MessageType": "CardAdmitted",
      "Date": "2025-05-14T00:00:00.000Z"
    },
    {
      "ObjectName1": "Aschieri, Cecilia Veronica",
      "PersonnelType": "Employee",
      "EmployeeID": "320904",
      "text5": "Buenos Aires - Montevideo 825",
      "PartitionName2": "AR.Cordoba",
      "MessageType": "CardAdmitted",
      "Date": "2025-05-14T00:00:00.000Z"
    },
    {
      "ObjectName1": "Baigun, Micaela Nadia",
      "PersonnelType": "Terminated Personnel",
      "EmployeeID": "320413",
      "text5": "Buenos Aires - Montevideo 825",
      "PartitionName2": "AR.Cordoba",
      "MessageType": "CardAdmitted",
      "Date": "2025-05-14T00:00:00.000Z"
    },
    {
      "ObjectName1": "Baroni, Marcos",
      "PersonnelType": "Employee",
      "EmployeeID": "322804",
      "text5": "Buenos Aires - Montevideo 825",
      "PartitionName2": "AR.Cordoba",
      "MessageType": "CardAdmitted",
      "Date": "2025-05-14T00:00:00.000Z"
    },




as per my request go very step by step and Update Files as per my request,
thank you for your help ,
happy journey
