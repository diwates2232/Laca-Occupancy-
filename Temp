--- a/src/components/SummaryCard.jsx
+++ b/src/components/SummaryCard.jsx
@@ export default function SummaryCard({ title, total, stats, icon, sx = {} }) {
-        {/* Icon + Title */}
+        {/* Icon + Title */}
         <Box display="flex" justifyContent="center" alignItems="center" mb={1}>
           {icon && (
             <Box component="span" sx={{ mr: 1, fontSize: 32, color: 'primary.main' }}>
               {icon}
             </Box>
           )}
-          <Typography variant="subtitle1" gutterBottom>
+          <Typography
+            variant="subtitle1"
+            gutterBottom
+            sx={ titleColor ? { color: titleColor } : {} }
+          >
             {title}
           </Typography>
         </Box>
@@
         {total != null && (
           <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
-            <Typography variant="h4" sx={{ mr: 1 }}>
+            <Typography
+              variant="h4"
+              sx={{
+                mr: 1,
+                ...(totalColor ? { color: totalColor } : {})
+              }}
+            >
               {total}
             </Typography>
           </Box>
@@
         <Grid container spacing={1} justifyContent="center">
           {stats.map(({ label, value }, idx) => (
             <Grid key={label} item xs={6}>
-              <Typography variant="caption">{label}</Typography>
-              <Typography variant="h6">{value}</Typography>
+              <Typography
+                variant="caption"
+                sx={ statColors && statColors[idx]
+                  ? { color: statColors[idx] }
+                  : {} }
+              >
+                {label}
+              </Typography>
+              <Typography
+                variant="h6"
+                sx={ statColors && statColors[idx]
+                  ? { color: statColors[idx] }
+                  : {} }
+              >
+                {value}
+              </Typography>
             </Grid>
           ))}
         </Grid>







--- a/src/pages/Dashboard.jsx
+++ b/src/pages/Dashboard.jsx
@@
   return (
@@
         {/* Partition cards */}
         <Box mt={4} sx={{ width: '100vw%', display: 'flex', flexWrap: 'wrap', gap: 1 }}>
           {loading ? (
             <Skeleton variant="rectangular" width="100vw%" height={220} />
           ) : (
-            (() => {
+            (() => {
               // map of flags and primary colors for each partition
               const flagMap = {
@@
               };
-              const colorMap = {
-                'CR.Costa Rica Partition': '#CE1126', // Costa Rica red
-                'AR.Cordoba':               '#75AADB', // Argentina light blue
-                'MX.Mexico City':           '#006847', // Mexico green
-                'PE.Lima':                  '#D91023', // Peru red
-                'BR.Sao Paulo':             '#009C3B', // Brazil green
-                'PA.Panama City':           '#0033A0', // Panama blue
-              };
+              // full palette arrays per flag: [title, total, stat1, stat2, stat3?]
+              const colorsMap = {
+                'CR.Costa Rica Partition': [
+                  '#CE1126', // title (red)
+                  '#003893', // total (blue)
+                  '#FFFFFF', // Employees (white)
+                  '#003893', // Contractors (blue)
+                  '#FFFFFF'  // TempBadge (white)
+                ],
+                'AR.Cordoba': [
+                  '#75AADB', // title (light blue)
+                  '#FFFFFF', // total (white)
+                  '#F6B40E', // Employees (sun yellow)
+                  '#FFFFFF'  // Contractors (white)
+                ],
+                'MX.Mexico City': [
+                  '#006847', // title (green)
+                  '#FFFFFF', // total (white)
+                  '#CE1126', // Employees (red)
+                  '#FFFFFF'  // Contractors (white)
+                ],
+                'PE.Lima': [
+                  '#D91023', // title (red)
+                  '#FFFFFF', // total (white)
+                  '#D91023', // Employees (red)
+                  '#FFFFFF'  // Contractors (white)
+                ],
+                'BR.Sao Paulo': [
+                  '#009C3B', // title (green)
+                  '#FDDC00', // total (yellow)
+                  '#3E4095', // Employees (blue)
+                  '#FDDC00'  // Contractors (yellow)
+                ],
+                'PA.Panama City': [
+                  '#0033A0', // title (blue)
+                  '#FFFFFF', // total (white)
+                  '#CE1126', // Employees (red)
+                  '#FFFFFF'  // Contractors (white)
+                ]
+              };
 
               return partitions.map(p => {
-                const flagSrc = flagMap[p.name] || '';
-                const borderColor = colorMap[p.name] || '#FFC107';
+                const flagSrc = flagMap[p.name] || '';
+                const colors = colorsMap[p.name] || ['#FFC107', '#FFC107'];
+                const [ titleC, totalC, ...statCs ] = colors;
                 return (
                   <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                     <SummaryCard
                       title={p.name}
-                      icon={
-                        flagSrc && (
-                          <Box
-                            component="img"
-                            src={flagSrc}
-                            alt={`${p.name} flag`}
-                            sx={{ width: 60, height: 40 }}
-                          />
-                        )
-                      }
+                      icon={
+                        flagSrc && (
+                          <Box
+                            component="img"
+                            src={flagSrc}
+                            alt={`${p.name} flag`}
+                            sx={{
+                              width: 60,
+                              height: 40,
+                              border: '1px solid #000'  // 1px border
+                            }}
+                          />
+                        )
+                      }
                       total={p.total}
                       stats={[
                         { label: 'Employees',   value: p.Employee },
                         { label: 'Contractors', value: p.Contractor },
                         ...(p.name === 'CR.Costa Rica Partition'
                           ? [{ label: 'Temp Badge', value: p.TempBadge }]
                           : [])
                       ]}
+                      // pass our new color props
+                      titleColor={titleC}
+                      totalColor={totalC}
+                      statColors={statCs}
                       sx={{
                         width: '100vw%',
-                        border: `3px solid ${borderColor}`
+                        border: `2px solid ${titleC}`
                       }}
                     />
                   </Box>
                 );
               });
             })()
           )}
         </Box>











Now below files looks very good ,dont make unnecessary changes
1)add 1 px border for each flag,
2)curreently cards display data using Western union colours only 
i think use flag Colours to display data like 

CR.Costa Rica Partition --- flag include 3 to four colours use main Colour to display Partation name 
0 ------use 2nd colour for this 
Employees----- use colours for this 
0-----usr another here only colours included in flag 
Contractors-----same for here
0
Temp Badge
0



// src/pages/Dashboard.jsx

import React, { useEffect, useState } from 'react';
import {
  Container,
  Box,
  Typography,
  Skeleton,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Button,
  Divider
} from '@mui/material';



import TodayIcon  from '@mui/icons-material/Today';
import SyncIcon   from '@mui/icons-material/Sync';

// Flags
import CostaRicaFlag  from '../assets/flags/costa-rica.png';
import ArgentinaFlag  from '../assets/flags/argentina.png';
import MexicoFlag     from '../assets/flags/mexico.png';
import PeruFlag       from '../assets/flags/peru.png';
import BrazilFlag     from '../assets/flags/brazil.png';
import PanamaFlag     from '../assets/flags/panama.png';


import { useNavigate } from 'react-router-dom';

import Header from '../components/Header';
import Footer from '../components/Footer';
import SummaryCard from '../components/SummaryCard';
import ChartCard from '../components/ChartCard';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import { partitionList } from '../services/occupancy.service';


export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');
  const [partition, setPartition] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  if (error) {
    return (
      <Box width="100vw%" py={4}>
        <Typography color="error" align="center">
          Error loading live data
        </Typography>
      </Box>
    );
  }

  // Build and sort partitions
  const regions = data?.realtime || {};
  const partitions = partitionList
    .map(name => {
      const key = Object.keys(regions).find(k => k.includes(name));
      const p = key ? regions[key] : {};
      return {
        name,
        total: p.total || 0,
        Employee: p.Employee || 0,
        Contractor: p.Contractor || 0,
        TempBadge: p.TempBadge || 0,
        floors: p.floors || {}
      };
    })
    .sort((a, b) => b.total - a.total);

  // Totals
  const todayTot   = data?.today?.total    ?? 0;
  const todayEmp   = data?.today?.Employee ?? 0;
  const todayCont  = data?.today?.Contractor ?? 0;
  const realtimeTot  = partitions.reduce((sum, p) => sum + p.total, 0);
  const realtimeEmp  = partitions.reduce((sum, p) => sum + p.Employee, 0);
  const realtimeCont = partitions.reduce((sum, p) => sum + p.Contractor, 0);

  return (
    <>
      <Header />

      <Container
        maxWidth={false}
        disableGutters
        sx={{
          pt: 1,
          pb: 2,
          px: '20px',        // ← exactly 20px padding both sides
        }}
      >
        {/* Top summary cards */}
        <Box
          display="flex"
          alignItems="stretch"
          sx={{ mb: 1, width: '100vw%' }}
        >
          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Today’s Headcount"
              total={todayTot}
              stats={[
                { label: 'Employees',   value: todayEmp },
                { label: 'Contractors', value: todayCont }
              ]}
              // sx={{ height: 190, border: '2px solid #FFC107' }}
                          icon={<TodayIcon />}
            sx={{ height: 190, border: '2px solid #FFC107' }}
            />
          </Box>

          <Divider
            // orientation="vertical"
            flexItem
            sx={{ mx: 1 }}
          />

          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Realtime Headcount"
              total={realtimeTot}
              stats={[
                { label: 'Employees',   value: realtimeEmp },
                { label: 'Contractors', value: realtimeCont }
              ]}
              // sx={{ height: 190, border: '2px solid #FFC107' }}

           icon={<SyncIcon />}
            sx={{ height: 190, border: '2px solid #FFC107' }}

            />
          </Box>
        </Box>

        {/* Partition cards */}
        <Box mt={4} sx={{ width: '100vw%', display: 'flex', flexWrap: 'wrap', gap: 1 }}>
          {loading ? (
            <Skeleton variant="rectangular" width="100vw%" height={220} />
          ) : (
                        (() => {
              // map of flags and primary colors for each partition
              const flagMap = {
                'CR.Costa Rica Partition': CostaRicaFlag,
                'AR.Cordoba':               ArgentinaFlag,
                'MX.Mexico City':           MexicoFlag,
                'PE.Lima':                  PeruFlag,
                'BR.Sao Paulo':             BrazilFlag,
                'PA.Panama City':           PanamaFlag,
              };
              const colorMap = {
                'CR.Costa Rica Partition': '#CE1126', // Costa Rica red
                'AR.Cordoba':               '#75AADB', // Argentina light blue
                'MX.Mexico City':           '#006847', // Mexico green
                'PE.Lima':                  '#D91023', // Peru red
                'BR.Sao Paulo':             '#009C3B', // Brazil green
                'PA.Panama City':           '#0033A0', // Panama blue
              };

              return partitions.map(p => {
                const flagSrc = flagMap[p.name] || '';
                const borderColor = colorMap[p.name] || '#FFC107';
                return (
                  <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                    <SummaryCard
                      title={p.name}
                      icon={
                        flagSrc && (
                          <Box
                            component="img"
                            src={flagSrc}
                            alt={`${p.name} flag`}
                            sx={{ width: 60, height: 40 }}
                          />
                        )
                      }
                      total={p.total}
                      stats={[
                        { label: 'Employees',   value: p.Employee },
                        { label: 'Contractors', value: p.Contractor },
                        ...(p.name === 'CR.Costa Rica Partition'
                          ? [{ label: 'Temp Badge', value: p.TempBadge }]
                          : [])
                      ]}
                      sx={{
                        width: '100vw%',
                        border: `3px solid ${borderColor}`
                      }}
                    />
                  </Box>
                );
              });
            })()
           )}
         </Box>

          

        {/* Live totals chart */}
        <Box mt={4} sx={{ width: '100vw%' ,p:2, border: '2px solid #FFC107' }}>
          <Box display="flex" justifyContent="space-between" alignItems="center">
            <Typography variant="h6" gutterBottom>
              Live Totals by Partition
            </Typography>
            <Typography variant="body2" color="textSecondary">
              Last updated: {lastUpdate}
            </Typography>
          </Box>

          {loading ? (
            <Skeleton variant="rectangular" width="100%" height={320} />
          ) : (
  <ChartCard
    chartType="bar"                  // new prop
    chartHeight={360}
    data={partitions.map((p,i) => ({
     name: p.name,
      value: p.total,
      fill: i % 2 === 0 ? '#FFC107' : '#B0BEC5'
    }))}
    dataKey="value"
    colors={{ head: '#FFC107', cap: '#B0BEC5' }}

     // Pass in the live breakdown for Employees / Contractors / TempBadge
     breakdown={{
       Employee: realtimeEmp,
       Contractor: realtimeCont,
       TempBadge: partitions.reduce((sum,p)=>sum+p.TempBadge,0),
     }}



    sx={{ border: '2px solid #FFC107' }}
  />
          )}
        </Box>
      </Container>

      <footer style={{
        backgroundColor: '#000000',
        color: '#FFC107',
        padding: '1.5rem 0',
        textAlign: 'center',
        marginTop: 0,
        borderTop: '2px solid #FFC107',
        fontSize: '0.95rem',
        lineHeight: '1.6'
      }}>
        <div><strong>Global Security Operations Center</strong><br/>
          Live HeadCount against Occupancy dashboard for Western Union — Real-time occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
             style={{ color: '#FFC107', textDecoration: 'underline' }}>
            GSOC Mail
          </a>&nbsp;|&nbsp;
          Landline:&nbsp;<span style={{ color: '#FFC107' }}>+91-020-67632394</span>
        </div>
      </footer>
    </>
  );
}








// src/theme/westernUnionTheme.js
import { createTheme } from '@mui/material/styles';

const westernUnionTheme = createTheme({
  palette: {
    mode: 'dark',
    background: {
      default: '#000000',
      paper:   '#1c1c1c'
    },
    primary: {
      main: '#FFC107',
      contrastText: '#000000'
    },
    secondary: {
      main: '#FFFFFF',
      contrastText: '#000000'
    },
    text: {
      primary:   '#FFFFFF',
      secondary: 'rgba(255,255,255,0.7)'
    },
    divider: 'rgba(255,255,255,0.2)'
  },

  typography: {
    fontFamily: '"Roboto","Helvetica","Arial",sans-serif',
    // Card titles
    subtitle1: { fontWeight: 500, color: '#FFC107' },
    // Totals (variant h4 in SummaryCard)
    h4: { color: '#FFC107', fontWeight: 'bold' },
    // Stat values (variant h6)
    h6: { color: '#FFC107', fontWeight: 600 },
    // Stat labels (variant caption)
    caption: { color: '#FFC107', fontWeight: 500 },

    // You can leave other variants untouched
    body1:   { color: '#FFFFFF' },
    body2:   { color: 'rgba(255,255,255,0.7)' }
  },

  components: {
    MuiCssBaseline: {
      styleOverrides: {
        html: {
          height: '100%'
        },
        body: {
          margin: 0,
          padding: 0,
          height: '100%',
          background: 'linear-gradient(135deg, #000000 30%, #2c0000 60%, #000000 100%)',
          backgroundAttachment: 'fixed',
          backgroundRepeat: 'no-repeat',
          backgroundSize: 'cover',
          animation: 'gradientSpin 20s ease infinite',
          overflowX: 'hidden'
        },
        '@keyframes gradientSpin': {
          '0%':   { backgroundPosition: '0% 50%' },
          '50%':  { backgroundPosition: '100% 50%' },
          '100%': { backgroundPosition: '0% 50%' }
        }
      }
    },

    MuiButton: {
      styleOverrides: {
        root: {
          textTransform: 'none',
          borderRadius: 4
        },
        contained: {
          backgroundColor: '#FFC107',
          color: '#000000',
          '&:hover': {
            backgroundColor: '#e6ac00'
          }
        }
      }
    },

    MuiDivider: {
      styleOverrides: {
        root: {
          backgroundColor: 'rgba(255,255,255,0.2)'
        }
      }
    },

    MuiTooltip: {
      styleOverrides: {
        tooltip: {
          backgroundColor: '#333',
          color: '#FFF'
        }
      }
    }

    // Note: We no longer override MuiCard so your SummaryCard and ChartCard
    // backgrounds, borders and hover effects come from their own `sx` props.
  }
});

export default westernUnionTheme;

