Now check each file line by line and update it as per requirnment 
File 1
// src/pages/Dashboard.jsx

import React, { useEffect, useState } from 'react';
import { Container, Box, Typography, Skeleton } from '@mui/material';
import GroupIcon          from '@mui/icons-material/Group';
import TrackChangesIcon   from '@mui/icons-material/TrackChanges';
import PeopleIcon         from '@mui/icons-material/People';
import BusinessCenterIcon from '@mui/icons-material/BusinessCenter';

import Header         from '../components/Header';
import Footer         from '../components/Footer';
import SummaryCard    from '../components/SummaryCard';
import ChartCard      from '../components/ChartCard';
import LoadingSpinner from '../components/LoadingSpinner';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';

import { summaryPartitionGroup } from '../utils/partitionGroups';

// flags & mappings as before…
//  import { partitionList, displayName, flagMap, colorsMap } from '../config/dashboardConfig';

// Flags
import austriaFlag    from '../assets/flags/austria.png';
import uaeFlag        from '../assets/flags/uae.png';
import irelandFlag    from '../assets/flags/ireland.png';
import italyFlag      from '../assets/flags/italy.png';
import lithuaniaFlag  from '../assets/flags/lithuania.png';
import moroccoFlag    from '../assets/flags/morocco.png';
import russiaFlag     from '../assets/flags/russia.png';
import ukFlag         from '../assets/flags/uk.png';
import spainFlag      from '../assets/flags/spain.png';

const partitionList = [
  'AUT.Vienna','DU.Abu Dhab','IE.Dublin','IT.Rome',
  'LT.Vilnius','MA.Casablanca','RU.Moscow','UK.London','ES.Madrid'
];

const displayName = {
  'AUT.Vienna':    'Vienna',
  'DU.Abu Dhab':   'Abu Dhabi',
  'IE.Dublin':     'Dublin',
  'IT.Rome':       'Rome',
  'LT.Vilnius':    'Vilnius',
  'MA.Casablanca': 'Casablanca',
  'RU.Moscow':     'Moscow',
  'UK.London':     'London',
  'ES.Madrid':     'Madrid'
};

const flagMap = {
  'AUT.Vienna':    austriaFlag,
  'DU.Abu Dhab':   uaeFlag,
  'IE.Dublin':     irelandFlag,
  'IT.Rome':       italyFlag,
  'LT.Vilnius':    lithuaniaFlag,
  'MA.Casablanca': moroccoFlag,
  'RU.Moscow':     russiaFlag,
  'UK.London':     ukFlag,
  'ES.Madrid':     spainFlag
};

const colorsMap = {
  'AUT.Vienna':    ['#FFD666','#fcf3cf','#2ecc71','#ec7063'],
  'DU.Abu Dhab':   ['#FFE599','#fcf3cf','#2ecc71','#ec7063'],
  'IE.Dublin':     ['#FFF2CC','#fcf3cf','#2ecc71','#ec7063'],
  'IT.Rome':       ['#FFD666','#fcf3cf','#2ecc71','#ec7063'],
  'LT.Vilnius':    ['#FFE599','#fcf3cf','#2ecc71','#ec7063'],
  'MA.Casablanca': ['#FFF2CC','#fcf3cf','#2ecc71','#ec7063'],
  'RU.Moscow':     ['#FFD666','#fcf3cf','#2ecc71','#ec7063'],
  'UK.London':     ['#FFE599','#fcf3cf','#2ecc71','#ec7063'],
  'ES.Madrid':     ['#FFC0CB','#ffe5ec','#ff4081','#d50065']
};




export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  if (error) {
    return (
      <Box py={4}>
        <Typography color="error" align="center">
          Error loading live data
        </Typography>
      </Box>
    );
  }

  const regions = data?.realtime || {};

  //
  // 1) Build summaryCards data by grouping Vilnius GAMA+Delta under one “Vilnius” card
  //
  const summaryItems = [];

  // First handle all “fixed” group keys
  Object.entries(summaryPartitionGroup).forEach(([label, suffixes]) => {
    // For each suffix, find the matching floor entries under LT.Vilnius.floors
    // Gama vs Delta live numbers are in floors
    const floors = regions['LT.Vilnius']?.floors || {};
    let total = 0, emp = 0, cont = 0;
    suffixes.forEach(suf => {
      Object.entries(floors).forEach(([floorName, cnt]) => {
        if (floorName.toUpperCase().includes(suf.toUpperCase())) {
          total += cnt;
        }
      });
      // we don’t have per-floor breakdown by type in liveSummary, so
      // approximate by proportion:
      const parent = regions['LT.Vilnius'];
      if (parent && parent.total) {
        const frac = total / parent.total;
        emp  += Math.round(parent.Employee   * frac);
        cont += Math.round(parent.Contractor * frac);
      }
    });
    // summaryItems.push({ label, total, emp, cont });

    // now include the Vilnius flag and use its color scheme
    summaryItems.push({
      label,
      total,
      emp,
      cont,
      flag:   flagMap['LT.Vilnius'],
      colors: colorsMap['LT.Vilnius']
    });


  });

  // Then all other partitions (excluding Vilnius) → still treat full
  partitionList.forEach(p => {
    if (p === 'LT.Vilnius') return;
    const r = regions[p] || {};
    summaryItems.push({
      label: displayName[p],
      total:     r.total      || 0,
      emp:       r.Employee   || 0,
      cont:      r.Contractor || 0,
      flag:      flagMap[p],
      colors:    colorsMap[p]
    });
  });

  //
  // 2) Build chart data: split Vilnius into separate GAMA vs Delta bars + the others
  //
  const chartData = [];

  // 2a) GAMA + Delta individually
  Object.entries(summaryPartitionGroup).forEach(([groupLabel, suffixes]) => {
    const floors = regions['LT.Vilnius']?.floors || {};
    suffixes.forEach(suf => {
      const name = `${groupLabel} ${suf}`;
      const value = Object.entries(floors)
        .filter(([floorName]) => floorName.toUpperCase().includes(suf.toUpperCase()))
        .reduce((sum,[,cnt]) => sum + cnt, 0);
      chartData.push({
        name,
        value,
        breakdown: {} // if you want further breakdown, you’d need per-floor type data
      });
    });
  });

  // 2b) Other partitions as whole
  partitionList.forEach(p => {
    if (p === 'LT.Vilnius') return;
    const r = regions[p] || {};
    chartData.push({
      name: displayName[p],
      value:     r.total      || 0,
      breakdown: { Employees: r.Employee || 0, Contractors: r.Contractor || 0 }
    });
  });

  // Top summary totals (unchanged):
  const todayTot  = data?.today.total    || 0;
  const todayEmp  = data?.today.Employee || 0;
  const todayCon  = data?.today.Contractor || 0;
  const realtimeTot = summaryItems.reduce((s,i) => s + i.total, 0);
  const realtimeEmp = summaryItems.reduce((s,i) => s + i.emp,   0);
  const realtimeCon = summaryItems.reduce((s,i) => s + i.cont,  0);

  return (
    <>
      <Header />

      <Container maxWidth={false} disableGutters sx={{ px:2, py:1 }}>
        {/* Top six summary cards */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={2}>
          {[
            { title: "Today's Total Headcount",     value: todayTot,   icon: <GroupIcon sx={{ color:'#E57373', fontSize:36 }}/>,  border:'#FFD666' },
            { title: "Today's Employees Count",     value: todayEmp,   icon: <PeopleIcon sx={{ color:'#81C784', fontSize:36 }}/>,    border:'#81C784' },
            { title: "Today's Contractors Count",   value: todayCon,   icon: <BusinessCenterIcon sx={{ color:'#64B5F6', fontSize:36 }}/>, border:'#FFE599' },
            { title: "Realtime Headcount",          value: realtimeTot,icon: <TrackChangesIcon sx={{ color:'#BA68C8', fontSize:36 }}/>, border:'#FFF2CC' },
            { title: "Realtime Employees Count",    value: realtimeEmp,icon: <PeopleIcon sx={{ color:'#FFB74D', fontSize:36 }}/>,    border:'#FFD666' },
            { title: "Realtime Contractors Count",  value: realtimeCon,icon: <BusinessCenterIcon sx={{ color:'#4DB6AC', fontSize:36 }}/>, border:'#FFE599' },
          ].map(c => (
            <Box key={c.title} sx={{ flex:'1 1 calc(16.66% - 8px)' }}>
              <SummaryCard
                title={c.title}
                total={c.value}
                stats={[]}
                icon={c.icon}
                sx={{ height:140, border:`2px solid ${c.border}` }}
              />
            </Box>
          ))}
        </Box>

        {/* Partition summary cards */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={4}>
          {loading
            ? <LoadingSpinner/>
            : summaryItems.map(item => {
                const [tc, totc, ec, cc] = item.colors || ['#FFE599','#fcf3cf','#2ecc71','#ec7063'];
                return (
                  <Box key={item.label} sx={{ flex:'1 1 calc(16.66% - 8px)' }}>
                    <SummaryCard
                      title={item.label}
                      total={item.total}
                      stats={[
                        { label:'Employees',   value:item.emp },
                        { label:'Contractors', value:item.cont }
                      ]}
                      icon={item.flag ? (
                        <Box component="img" src={item.flag} sx={{ width:50, height:30, border:'1px solid #fff' }}/>
                      ) : null}
                      titleColor={tc}
                      totalColor={totc}
                      statColors={[ec,cc]}
                      sx={{
                        height:160,
                        border:`2px solid ${tc}`,
                        '& .MuiTypography-subtitle1': { fontSize:'1.3rem' },
                        '& .MuiTypography-h4': { fontSize:'1.7rem' },
                        '& .MuiTypography-caption': { fontSize:'0.875rem' }
                      }}
                    />
                  </Box>
                );
              })
          }
        </Box>

        {/* Live totals bar chart (GAMA vs Delta & others) */}
        <Box p={2} sx={{ border:'2px solid #FFC107' }}>
          <Box display="flex" justifyContent="space-between" mb={1}>
            <Typography variant="h6">Live Totals by Site</Typography>
            <Typography variant="body2">Last updated: {lastUpdate}</Typography>
          </Box>
          {loading
            ? <Skeleton variant="rectangular" height={240}/>
            : <ChartCard
                data={chartData}
                dataKey="value"
                colors={{ head:'#FFC107', cap:'#B0BEC5' }}
                chartHeight={320}
              />
          }
        </Box>
      </Container>

      <Footer />
    </>
  );
}



file 2


C:\Users\W0024618\Desktop\emea-occupancy-frontend\src\utils\doorMap.js

const doorMap = [
{
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL to WUIB Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL to WUIB Kitchen Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB to WUIB Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_RECEPTION Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Reception to WUIB Restrict`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL Main Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUPSIL Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL Side Storage Room Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_SERVER ROOM 1 Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Restricted Main Entrance 2 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Restricted Entrance 2 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_SERVER ROOM 2 Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_IT Storage Room Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Restricted Entrance 1 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Restricted Main Entrance 1 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Main Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'Madrid',
    door: `ES MADRID MAIN DOOR`,
    inDirectionFloor: 'Madrid',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'Madrid',
    door: `ES MADRID SERVER ROOM`,
    inDirectionFloor: 'Madrid',
    outDirectionFloor: 'Madrid',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Balcony Door From the Kitchen 1`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Balcony Door From Kitchen 2`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Side Balcony Entrance`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Main Entrance`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Vender Elevator Door`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Server Room`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Office to Stairwell Door`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_01_Main Entrance`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_04_Server Restricted Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_02_Reception`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_03_Comsroom`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_7th Floor_Emergency Exit`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_main entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_training room entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_office entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_IT room`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_server Restricted Door`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_safe/cashier room`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Emergency Exit Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Server Room Restricted Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Rome',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Main Entrance Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Secondary Main Entrance Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Rome',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor elevator lobby`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor IDF Restricted Door`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Archive/IT`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th Floor_Emergency Exit`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Stairwell`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Supply Room`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Middle IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Middle OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Right IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Left OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Left IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Right OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Card Collector`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_ Delta_6th Floor_East Side Emergency Exit`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_6th Floor_West Side Emergency Exit`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_9th Floor_East Side Emergency Exit`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_9th Floor_West Side Emergency Exit`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_8th Floor_East Side Emergency Exit`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_8th Floor_West Side Emergency Exit`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_5th Floor_East Side Emergency Exit`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_5th Floor_West Side Emergency Exit`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_4th Floor_East Side Emergency Exit`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_4th Floor_West Side Emergency Exit`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_3th Floor_East Side Emergency Exit`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_3th Floor_West Side Emergency Exit`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_2th Floor_East Side Emergency Exit`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_2th Floor_West Side Emergency Exit`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Recreation Area Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Lobby Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Conference Hall Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_East Stairway Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_West Stairway Emergency  Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Central Stairway Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Service Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_DELTA_6th Floor_Office Entrance`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Barbora doors`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Zygimantas Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Elevator Lobby East`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Elevator Lobby West`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Supply Room`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Server Room Restricted Door`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Elevator Lobby East`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Elevator Lobby West`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Supply Room`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Server Room Restricted Door`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Elevator Lobby East`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Elevator Lobby West`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Supply Room`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Server Room Restricted Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Elevator Lobby East`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Elevator Lobby West`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_DELTA_6th_Floor_HR Archive`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Server Restricted Door`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_IT Lab`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Elevator Lobby East`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Elevator Lobby West`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
{
    partition: 'UK.London',
    door: `WU-UK-MH-FIRE EXIT DOOR`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'Out of office',
  },


  ];

export default doorMap;



C:\Users\W0024618\Desktop\emea-occupancy-frontend\src\utils\partitionGroups.js


// src/utils/partitionGroups.js
export const summaryPartitionGroup = {
  // label in the UI  : array of “raw” partitionName2 suffixes you want to combine
  'Vilnius': ['GAMA', 'Delta'],
  // you can add more groupings here later if needed
};




C:\Users\W0024618\Desktop\emea-occupancy-frontend\src\utils\floorLookup.js


// src/utils/floorLookup.js

import doorMap from './doorMap';

/**
 * Given a partition, door and direction, return the mapped floor string.
 * Falls back to 'Unmapped' only if there’s no matching entry.
 */
export function lookupFloor(partition, door, direction) {
  const entry = doorMap.find(
    d => d.partition === partition && d.door === door
  );
  if (!entry) return 'Unmapped';
  return direction === 'InDirection'
    ? entry.inDirectionFloor
    : entry.outDirectionFloor;
}

