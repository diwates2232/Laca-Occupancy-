const displayNameMap = {
  'CR.Costa Rica Partition': 'Costa Rica',
  'AR.Cordoba': 'Argentina',
  'MX.Mexico City': 'Mexico',
  'PE.Lima': 'Peru',
  'BR.Sao Paulo': 'Brazil',
  'PA.Panama City': 'Panama',
};

const colorsMap = {
  'CR.Costa Rica Partition': ['#FFD666', '#fcf3cf', '#2ecc71', '#ec7063', '#ec7063'],
  'AR.Cordoba':               ['#FFE599', '#fcf3cf', '#2ecc71', '#ec7063'],
  'MX.Mexico City':           ['#FFD666', '#fcf3cf', '#2ecc71', '#ec7063'],
  'PE.Lima':                  ['#FFF2CC', '#fcf3cf', '#2ecc71', '#ec7063'],
  'BR.Sao Paulo':             ['#FFD666', '#fcf3cf', '#2ecc71', '#ec7063'],
  'PA.Panama City':           ['#FFE599', '#fcf3cf', '#2ecc71', '#ec7063'],
};



data={partitions.map((p, i) => ({
  name: displayNameMap[p.name] || p.name.replace(' Partition',''),
  value: p.total,
  fill: colorsMap[p.name]?.[0] || (i % 2 === 0 ? '#FFC107' : '#B0BEC5')
}))}








<Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
    <SummaryCard
      title={displayNameMap[p.name] || p.name.replace(' Partition','')}
      icon={/* … */}
      total={p.total}
      stats={[ /* … */ ]}
      titleColor={titleC}
      totalColor={totalC}
      statColors={statCs}
      sx={{
        width: '100vw%',
        border: `1px solid ${titleC}`,
+       // typography overrides:
+       '& .MuiTypography-subtitle1': {
+         fontSize: '1rem'          // partition title
+       },
+       '& .MuiTypography-h4': {
+         fontSize: '1.5rem'        // partition total
+       },
+       '& .MuiTypography-caption': {
+         fontSize: '0.875rem'      // partition stats labels/values
+       }
      }}
    />
  </Box>




  {loading ? (
    <Skeleton variant="rectangular" width="100%" height={320} />
  ) : (
    <ChartCard
      chartType="bar"
      chartHeight={360}
-     data={partitions.map((p,i) => ({
-       name: p.name,
-       value: p.total,
-       fill: i % 2 === 0 ? '#FFC107' : '#B0BEC5'
-     }))}
+     data={partitions.map((p, i) => ({
+       name: displayNameMap[p.name] || p.name.replace(' Partition',''),
+       value: p.total,
+       fill: colorsMap[p.name]?.[0] || (i % 2 ? '#B0BEC5' : '#FFC107')
+     }))}
      dataKey="value"
      colors={{ head: '#FFC107', cap: '#B0BEC5' }}
      breakdown={{
        Employee: realtimeEmp,
        Contractor: realtimeCont,
        TempBadge: partitions.reduce((sum,p)=>sum+p.TempBadge,0),
      }}
      sx={{ border: '1px solid #FFC107' }}
    />
  )}












1) Now Add Font size here ,for partation titile , Total and statscarefully ,

        {/* Partition cards */}
        <Box mt={4} sx={{ width: '100vw%', display: 'flex', flexWrap: 'wrap', gap: 1 }}>
          {loading ? (
            <Skeleton variant="rectangular" width="100vw%" height={200} />
          ) : (
                        (() => {
              // map of flags and primary colors for each partition
              const flagMap = {
                'CR.Costa Rica Partition': CostaRicaFlag,
                'AR.Cordoba':               ArgentinaFlag,
                'MX.Mexico City':           MexicoFlag,
                'PE.Lima':                  PeruFlag,
                'BR.Sao Paulo':             BrazilFlag,
                'PA.Panama City':           PanamaFlag,
              };


              // full palette arrays per flag: [title, total, stat1, stat2, stat3?]
              const colorsMap = {
                'CR.Costa Rica Partition': [
                  '#FFD666', // title (red)
                  '#fcf3cf', // total (blue)
                  '#2ecc71', // Employees (white)
                  '#ec7063', // Contractors (blue)
                  '#ec7063'  // TempBadge (white)
                ],
               'AR.Cordoba': [
                   '#FFE599', // title (light blue)
                  '#fcf3cf', // total (white)
                  '#2ecc71', // Employees (sun yellow)
                  '#ec7063',  // Contractors (white)
                ],
                'MX.Mexico City': [
                   '#FFD666', // title (green)
                  '#fcf3cf', // total (white)
                  '#2ecc71', // Employees (red)
                  '#ec7063',  // Contractors (white)
                ],
                'PE.Lima': [
                  '#FFF2CC', // title (red)
                  '#fcf3cf', // total (white)
                  '#2ecc71',// Employees (red)
                  '#ec7063',  // Contractors (white)
                ],
                'BR.Sao Paulo': [
                  '#FFD666', // title (green)
                  '#fcf3cf', // total (yellow)
                  '#2ecc71', // Employees (blue)
                  '#ec7063', // Contractors (yellow)
                ],
                'PA.Panama City': [
                  '#FFE599', // title (blue)
                  '#fcf3cf', // total (white)
                  '#2ecc71', // Employees (red)
                  '#ec7063', // Contractors (white)
                ]
              };

              return partitions.map(p => {
  

                const flagSrc = flagMap[p.name] || '';
                const colors = colorsMap[p.name] || ['#FFC107', '#FFC107'];
                const [ titleC, totalC, ...statCs ] = colors;


                return (
                  <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                    <SummaryCard
                      // title={p.name}
                      title={displayNameMap[p.name] || p.name.replace(' Partition','')}
                    
                      icon={
                        flagSrc && (
                          <Box
                            component="img"
                            src={flagSrc}
                            alt={`${p.name} flag`}
                            sx={{
                              width: 50,
                              height: 30,
                              border: '1px solid #fff'  // 1px border
                            }}
                          />
                        )
                      }


                      total={p.total}
                      stats={[
                        { label: 'Employees',   value: p.Employee },
                        { label: 'Contractors', value: p.Contractor },
                        ...(p.name === 'CR.Costa Rica Partition'
                          ? [{ label: 'Temp Badge', value: p.TempBadge }]
                          : [])
                      ]}

                      // pass our new color props
                      titleColor={titleC}
                      totalColor={totalC}
                      statColors={statCs}


                    sx={{
                        width: '100vw%',
                    
                           border: `1px solid ${titleC}`
                      }}
                    />
                  </Box>
                );
              });
            })()
           )}
         </Box>





2) Currently chart display like partation count wise like Costa Rica 152 then their name shound first like 
now removed order and update data dynamic like When new entry arrive 




        {/* Live totals chart */}
        <Box mt={4} sx={{ width: '100vw%' ,p:2, border: '1px solid #FFC107' }}>
          <Box display="flex" justifyContent="space-between" alignItems="center">
            <Typography variant="h6" gutterBottom>
              Live Totals by Partition
            </Typography>
            <Typography variant="body2" color="textSecondary">
              Last updated: {lastUpdate}
            </Typography>
          </Box>

        {loading ? (
            <Skeleton variant="rectangular" width="100%" height={320} />
          ) : (
  <ChartCard
    chartType="bar"                  // new prop
    chartHeight={360}
    data={partitions.map((p,i) => ({
     name: p.name,
      value: p.total,
      fill: i % 2 === 0 ? '#FFC107' : '#B0BEC5'
    }))}
    dataKey="value"
    colors={{ head: '#FFC107', cap: '#B0BEC5' }}

     // Pass in the live breakdown for Employees / Contractors / TempBadge
     breakdown={{
       Employee: realtimeEmp,
       Contractor: realtimeCont,
       TempBadge: partitions.reduce((sum,p)=>sum+p.TempBadge,0),
     }}



    sx={{ border: '2px solid #FFC107' }}
  />
          )}
        </Box>
      </Container>

