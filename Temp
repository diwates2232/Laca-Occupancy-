First Check Below Files line by line and debug the issue .if not silve then i will share you components details also

C:\Users\W0024618\Desktop\swipeData\client\src\App.js



// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link, useLocation } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import ZoneDetailsTable from './components/ZoneDetailsTable';
import DashboardHome    from './pages/DashboardHome';
import ErtPage          from './pages/ErtPage';

import './App.css';

function ZoneDetailsPage({ detailsData }) {
  const [searchTerm, setSearchTerm] = useState('');

  return (
    <>
      <div
        className="d-flex justify-content-between align-items-center mb-2"
        style={{ flexWrap: 'wrap', gap: '0.5rem' }}
      >
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>

        <input
          type="text"
          placeholder="Search employee..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          style={{
            flexGrow: 1,
            maxWidth: 300,
            padding: '0.4rem 0.8rem',
            fontSize: '1rem',
            borderRadius: 4,
            border: '1px solid #ccc'
          }}
        />
      </div>

      <ZoneDetailsTable data={detailsData} searchTerm={searchTerm} />
    </>
  );
}

function App() {
  const location = useLocation();

  // Determine header text based on current route
  const headerText =
    location.pathname === '/ert'
      ? 'Emergency Response Team — Western Union Pune'
      : 'Live Occupancy — Western Union Pune';

  const [summaryData, setSummaryData]               = useState([]);
  const [detailsData, setDetailsData]               = useState({});
  const [floorData, setFloorData]                   = useState([]);
  const [zoneBreakdown, setZoneBreakdown]           = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday]   = useState(0);
  const [personnelSummary, setPersonnelSummary]     = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]             = useState({ employees: 0, contractors: 0, total: 0 });
  const [ertStatus, setErtStatus]                   = useState({});

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');

    es.onmessage = (e) => {
      try {
        const p = JSON.parse(e.data);

        setSummaryData(Array.isArray(p.summary) ? [...p.summary] : []);
        setDetailsData(p.details || {});
        setFloorData(Array.isArray(p.floorBreakdown) ? [...p.floorBreakdown] : []);
        setZoneBreakdown(Array.isArray(p.zoneBreakdown) ? [...p.zoneBreakdown] : []);
        setPersonnelBreakdown(Array.isArray(p.personnelBreakdown) ? [...p.personnelBreakdown] : []);
        setTotalVisitedToday(typeof p.totalVisitedToday === 'number' ? p.totalVisitedToday : 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setErtStatus(p.ertStatus || {});
      } catch {
        console.error('SSE parse error');
      }
    };

    es.onerror = (err) => {
      console.error('SSE error', err);
      es.close();
    };

    return () => es.close();
  }, []);

  return (
    <>
      <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
        <Navbar.Brand as={Link} to="/" className="wu-brand">
          {headerText}
        </Navbar.Brand>
        <Nav className="ms-auto align-items-center">
          <Nav.Link as={Link} to="/" className="nav-item-infographic">
            Dashboard
          </Nav.Link>
          <Nav.Link as={Link} to="/details" className="nav-item-infographic">
            Details
          </Nav.Link>
          <Nav.Link as={Link} to="/ert" className="nav-item-infographic">
            ERT Overview
          </Nav.Link>
          <Nav.Link className="theme-toggle-icon" title="Dark mode only">
            <FaSun />
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-2">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                summaryData={summaryData}
                detailsData={detailsData}
                floorData={floorData}
                zoneBreakdown={zoneBreakdown}
                personnelBreakdown={personnelBreakdown}
                totalVisitedToday={totalVisitedToday}
                personnelSummary={personnelSummary}
                visitedToday={visitedToday}
                ertStatus={ertStatus}
              />
            }
          />
          <Route
            path="/details"
            element={<ZoneDetailsPage detailsData={detailsData} />}
          />
          <Route
            path="/ert"
            element={<ErtPage ertStatus={ertStatus} />}
          />
        </Routes>
      </Container>
    </>
  );
}

export default function WrappedApp() {
  return (
    <BrowserRouter>
      <div className="dark-theme">
        <App />
      </div>
    </BrowserRouter>
  );
}





C:\Users\W0024618\Desktop\swipeData\client\src\services\app.js

import React, { useEffect, useState } from 'react';
import { fetchOccupancyData } from './services/api';
import SummaryChart from './components/SummaryChart';
import ZoneDetailsTable from './components/ZoneDetailsTable';
import 'bootstrap/dist/css/bootstrap.min.css';

function App() {
  const [data, setData] = useState(null);

  useEffect(() => {
    const interval = setInterval(async () => {
      const newData = await fetchOccupancyData();
      setData(newData);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  if (!data) return <div className="text-center mt-5">Loading...</div>;

  return (
    <div className="container mt-4">
      <h2 className="text-center mb-4">Live Employee Occupancy Dashboard</h2>
      <SummaryChart summary={data.summary} />
      <ZoneDetailsTable details={data.details} />
    </div>
  );
}

export default App;




C:\Users\W0024618\Desktop\swipeData\client\src\pages\DashboardHome.jsx







// C:\Users\W0024618\Desktop\swipeData\client\src\pages\DashboardHome.jsx

import React from 'react';
import { Container, Row, Col } from 'react-bootstrap';

import SummaryCards         from '../components/SummaryCards';
import FloorOccupancyChart  from '../components/FloorOccupancyChart';
import SummaryChart         from '../components/SummaryChart';
import PersonnelDonutChart  from '../components/PersonnelDonutChart';
// import ERTOverview        from '../components/ERTOverview';

export default function DashboardHome({
  summaryData,        // ← array of { zone, count }
  detailsData,        // ← object of zone → [ … events … ]
  floorData,          // ← array of { floor, total, byPersonnelType… }
  zoneBreakdown,      // ← array of { zone, total, byPersonnelType… }
  personnelBreakdown, // ← array of { personnelType, count }
  totalVisitedToday,  // ← number
  personnelSummary,   // ← { employees: #, contractors: # }
  visitedToday,       // ← { employees: #, contractors: #, total: # }
  ertStatus           // ← { “Site Head”: [ … ], “First Aid Team”: [ … ], … }
}) {
  const employees      = personnelSummary?.employees   ?? 0;
  const contractors    = personnelSummary?.contractors ?? 0;
  const totalOccupancy = employees + contractors;

  // Donut chart data: map into { personnelType, count } shape
  const chartData = (personnelBreakdown || []).map(({ personnelType, count }) => ({
    personnelType,
    count
  }));

  return (
    <Container fluid className="py-4">
      {/* ─── Top-level summary cards ─── */}
      <SummaryCards
        totalOccupancy={totalOccupancy}
        employeeCount={employees}
        contractorCount={contractors}
        totalVisitedToday={totalVisitedToday}
        employeesVisitedToday={visitedToday?.employees   ?? 0}
        contractorsVisitedToday={visitedToday?.contractors ?? 0}
      />

      <Row className="g-4">
        {/* ─── Floor-wise Occupancy ─── */}
        <Col md={4}>
          <FloorOccupancyChart data={floorData} />
        </Col>

        {/* ─── Zone-wise summary (pie) ─── */}
        <Col md={4}>
          <SummaryChart summary={summaryData} />
        </Col>

        {/* ─── Personnel-type donut ─── */}
        <Col md={4}>
          <PersonnelDonutChart data={chartData} />
        </Col>

        {/* ─── (Optional) ERT status might go here ─── */}
        {/* <Col md={12}>
          <ERTOverview ertStatus={ertStatus} />
        </Col> */}
      </Row>

           <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          marginTop: '0rem',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6'
        }}
      >
        <div>
          <strong>Global Security Operations Center</strong>
          <br />
          Live HeadCount against Occupancy dashboard for Western Union Pune — Real-time occupancy,
          floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a
            href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
            style={{ color: '#FFC72C', textDecoration: 'underline' }}
          >
            GSOC Mail
          </a>
          &nbsp;|&nbsp;
          Landline:&nbsp;
          <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>

    </Container>
  );
}




C:\Users\W0024618\Desktop\swipeData\client\src\pages\ErtPage.jsx

// src/pages/ErtPage.jsx

import React from 'react';
import { Container, Row, Col } from 'react-bootstrap';
import ERTOverview from '../components/ERTOverview';

/**
 * A standalone page that only renders the ERTOverview component,
 * with a footer containing “GSOC Mail” instead of the raw email.
 */
export default function ErtPage({ ertStatus }) {
  return (
    <Container fluid className="py-1">
      <Row className="g-1">
        <Col>
          <ERTOverview ertStatus={ertStatus} />
        </Col>
      </Row>

      <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          marginTop: '2rem',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6'
        }}
      >
        <div>
          <strong>Global Security Operations Center</strong>
          <br />
          Live HeadCount against Occupancy dashboard for Western Union Pune — Real-time occupancy,
          floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a
            href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
            style={{ color: '#FFC72C', textDecoration: 'underline' }}
          >
            GSOC Mail
          </a>
          &nbsp;|&nbsp;
          Landline:&nbsp;
          <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>
    </Container>
  );
}







// C:\Users\W0024618\Desktop\swipeData\client\src\pages\ZoneDeatailsPage.jsx

// src/components/ZoneDetailsTable.jsx

import React, { useState, useMemo } from 'react';
import './ZoneDetailsTable.css';

export default function ZoneDetailsTable({ data = {} }) {
  const [searchTerm, setSearchTerm] = useState('');

  // 1) Sort zones by descending count
  const sortedEntries = useMemo(() => {
    return Object.entries(data).sort(([, aList], [, bList]) => bList.length - aList.length);
  }, [data]);

  // 2) Filter predicate
  const matchesSearch = (emp) =>
    emp.ObjectName1.toLowerCase().includes(searchTerm.trim().toLowerCase());

  // 3) Handler for search input
  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  if (!sortedEntries.length) {
    return <p>No zone detail data available.</p>;
  }

  return (
    <div className="zone-cards">
      {/* Search input (optional reuse) */}
      <div style={{ marginBottom: '1rem', textAlign: 'right' }}>
        <input
          type="text"
          placeholder="Search employee..."
          value={searchTerm}
          onChange={handleSearchChange}
          style={{
            padding: '0.4rem 0.8rem',
            fontSize: '0.9rem',
            borderRadius: 4,
            border: '1px solid #ccc'
          }}
        />
      </div>

      {sortedEntries.map(([zone, emps]) => {
        // 4) Filter employees by search
        const filteredEmps = emps.filter(matchesSearch);
        if (filteredEmps.length === 0) {
          return null;
        }

        return (
          <div key={zone} className="zone-card">
            <div className="zone-header">
              <h3>{zone}</h3>
              <span className="zone-badge">Total: {filteredEmps.length}</span>
            </div>

            <table className="zone-table">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Swipe Time</th>
                  <th>Type</th>
                  <th>Door Name</th>
                </tr>
              </thead>
              <tbody>
                {filteredEmps.map((emp, i) => (
                  <tr key={`${emp.EmployeeID}-${i}`}>
                    <td>{emp.ObjectName1}</td>
                    <td>{emp.Swipe_Time}</td>
                    <td>{emp.PersonnelType}</td>
                    <td>{emp.door}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        );
      })}
    </div>
  );
}








