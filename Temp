 import React, { useEffect, useState } from 'react';
 // …
 import { partitionList } from '../services/occupancy.service';

+// Map raw partition keys → friendly names
+const displayNameMap = {
+  'CR.Costa Rica Partition': 'Costa Rica',
+  'AR.Cordoba':               'Argentina',
+  'MX.Mexico City':           'Mexico',
+  'PE.Lima':                  'Lima',
+  'BR.Sao Paulo':             'São Paulo',
+  'PA.Panama City':           'Panama'
+};




- title={p.name}
+ title={displayNameMap[p.name] || p.name.replace(' Partition','')}











--- a/src/pages/PartitionDetail.jsx
+++ b/src/pages/PartitionDetail.jsx
@@
-          {/* Summary */}
-          <Box display="flex" gap={2} mb={2} sx={{ px: "20px" }}>
-            <SummaryCard
-              title={`Today’s ${partition} Headcount`}
-              total={historyLoading ? 0 : partToday.total}
-              stats={[
-                { label: "Employees",   value: historyLoading ? <CircularProgress size={20} /> : partToday.Employee },
-                { label: "Contractors", value: historyLoading ? <CircularProgress size={20} /> : partToday.Contractor },
-                { label: "Temp Badge",  value: historyLoading ? <CircularProgress size={20} /> : partToday.TempBadge },
-              ]}
-              sx={{ flex: 1, height: 180,p:2, border: '2px solid #FFC107'  }}
-            />
-            <SummaryCard
-              title={`Live ${partition} Headcount`}
-              total={live.total}
-              stats={[
-                { label: "Employees",   value: live.Employee },
-                { label: "Contractors", value: live.Contractor },
-                { label: "Temp Badge",  value: live.TempBadge },
-              ]}
-              sx={{ flex: 1, height: 180 ,p:2, border: '2px solid #FFC107' }}
-            />
-          </Box>
+          {/* Six‐card partition summary */}
+          <Box display="flex" flexWrap="wrap" gap={1} mb={2} sx={{ px: "20px" }}>
+            {[
+              {
+                title: `Today's ${partition} Total Headcount`,
+                value: historyLoading ? <CircularProgress size={20} /> : partToday.total,
+                icon: <GroupIcon sx={{ color: '#E57373', fontSize: 36 }} />,
+                border: '#FFD666'
+              },
+              {
+                title: `Today's ${partition} Employees`,
+                value: historyLoading ? <CircularProgress size={20} /> : partToday.Employee,
+                icon: <PeopleIcon sx={{ color: '#81C784', fontSize: 36 }} />,
+                border: '#81C784'
+              },
+              {
+                title: `Today's ${partition} Contractors`,
+                value: historyLoading ? <CircularProgress size={20} /> : partToday.Contractor,
+                icon: <BusinessCenterIcon sx={{ color: '#64B5F6', fontSize: 36 }} />,
+                border: '#FFE599'
+              },
+              {
+                title: `Live ${partition} Total Headcount`,
+                value: live.total,
+                icon: <TrackChangesIcon sx={{ color: '#BA68C8', fontSize: 36 }} />,
+                border: '#FFF2CC'
+              },
+              {
+                title: `Live ${partition} Employees`,
+                value: live.Employee,
+                icon: <PeopleIcon sx={{ color: '#FFB74D', fontSize: 36 }} />,
+                border: '#FFD666'
+              },
+              {
+                title: `Live ${partition} Contractors`,
+                value: live.Contractor,
+                icon: <BusinessCenterIcon sx={{ color: '#4DB6AC', fontSize: 36 }} />,
+                border: '#FFE599'
+              }
+            ].map(card => (
+              <Box key={card.title} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
+                <SummaryCard
+                  title={card.title}
+                  total={card.value}
+                  stats={[]}
+                  icon={card.icon}
+                  sx={{
+                    height: 140,
+                    border: `1px solid ${card.border}`
+                  }}
+                />
+              </Box>
+            ))}
+          </Box>







C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\pages\Dashboard.jsx

{/* Top six summary cards */}
     <Box display="flex" flexWrap="wrap" gap={1} mb={1}>
  {[
    {
      title: "Today's Total Headcount",
      value: todayTot,
      icon: <GroupIcon sx={{ color: '#E57373', fontSize: 36 }} />,
      borderColor: '#FFD666',
    },
    {
      title: "Today's Employees Count",
      value: todayEmp,
      icon: <PeopleIcon sx={{ color: '#81C784', fontSize: 36 }} />,
      borderColor: '#81C784', 
    },
    {
      title: "Today's Contractors Count",
      value: todayCont,
      icon: <BusinessCenterIcon sx={{ color: '#64B5F6', fontSize: 36 }} />,
      borderColor: '#FFE599',
      
    },
    {
      title: "Realtime Headcount",
      value: realtimeTot,
      icon: <TrackChangesIcon sx={{ color: '#BA68C8', fontSize: 36 }} />,
      borderColor: '#FFF2CC',
    },
    {
      title: "Realtime Employees Count",
      value: realtimeEmp,
      icon: <PeopleIcon sx={{ color: '#FFB74D', fontSize: 36 }} />,
      borderColor: '#FFD666',
    },
    {
      title: "Realtime Contractors Count",
      value: realtimeCont,
      icon: <BusinessCenterIcon sx={{ color:  '#4DB6AC', fontSize: 36 }} />,
      borderColor: '#FFE599'
    }
  ].map(card => (
    <Box key={card.title} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
      <SummaryCard
        title={card.title}
        total={card.value}
        stats={[]}
        icon={card.icon}
        sx={{
          height: 140,
          border: `1px solid ${card.borderColor}`
        }}
      />
    </Box>
  ))}
</Box>



Refer Dashboard Grid structure and update 6 cards structure in partationDetail.jsx carefully , Keep remenaning things as it is carefully

C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\pages\PartitionDetail.jsx




          {/* Summary */}
          <Box display="flex" gap={2} mb={2} sx={{ px: "20px" }}>
            <SummaryCard
              title={`Today’s ${partition} Headcount`}
              total={historyLoading ? 0 : partToday.total}
              stats={[
                { label: "Employees",   value: historyLoading ? <CircularProgress size={20} /> : partToday.Employee },
                { label: "Contractors", value: historyLoading ? <CircularProgress size={20} /> : partToday.Contractor },
                { label: "Temp Badge",  value: historyLoading ? <CircularProgress size={20} /> : partToday.TempBadge },
              ]}
              sx={{ flex: 1, height: 180,p:2, border: '2px solid #FFC107'  }}
            />
            <SummaryCard
              title={`Live ${partition} Headcount`}
              total={live.total}
              stats={[
                { label: "Employees",   value: live.Employee },
                { label: "Contractors", value: live.Contractor },
                { label: "Temp Badge",  value: live.TempBadge },
              ]}
              sx={{ flex: 1, height: 180 ,p:2, border: '2px solid #FFC107' }}
            />
          </Box>


