// src/components/Header.jsx

import React from 'react';
import {
  AppBar,
  Toolbar,
  Box,
  Typography,
  Select,
  MenuItem,
  IconButton
} from '@mui/material';
import { useNavigate, useLocation } from 'react-router-dom';

import HomeIcon    from '@mui/icons-material/Home';
import HistoryIcon from '@mui/icons-material/History';
import ListAltIcon from '@mui/icons-material/ListAlt';

import WuLogo from '../assets/wu-logo.png';
import CostaRicaFlag from '../assets/flags/costa-rica.png';
import ArgentinaFlag  from '../assets/flags/argentina.png';
import MexicoFlag     from '../assets/flags/mexico.png';
import PeruFlag       from '../assets/flags/peru.png';
import BrazilFlag     from '../assets/flags/brazil.png';
import PanamaFlag     from '../assets/flags/panama.png';
import LacaFlag       from '../assets/laca-flag.png';
import { partitionList } from '../services/occupancy.service';

export default function Header() {
  const navigate = useNavigate();
  const loc = useLocation();

  const parts = loc.pathname.split('/').filter(Boolean);
  const isPartitionPath = parts[0] === 'partition' && Boolean(parts[1]);
  const currentPartition = isPartitionPath ? decodeURIComponent(parts[1]) : '';
  const suffixSegments = isPartitionPath
    ? parts.slice(2)
    : parts[0] === 'history'
      ? ['history']
      : [];

  const flagMap = {
    'CR.Costa Rica Partition': CostaRicaFlag,
    'AR.Cordoba':               ArgentinaFlag,
    'MX.Mexico City':           MexicoFlag,
    'PE.Lima':                  PeruFlag,
    'BR.Sao Paulo':             BrazilFlag,
    'PA.Panama City':           PanamaFlag,
  };
  const selectedFlag = flagMap[currentPartition] || LacaFlag;

  const makePartitionPath = (suffix) => {
    const base = `/partition/${encodeURIComponent(currentPartition)}`;
    return suffix ? `${base}/${suffix}` : base;
  };

  const handlePartitionChange = (newPartition) => {
    if (!newPartition) return navigate('/');
    const base = `/partition/${encodeURIComponent(newPartition)}`;
    const full = suffixSegments.length
      ? `${base}/${suffixSegments.join('/')}`
      : base;
    navigate(full);
  };

  return (
    <AppBar position="static" color="primary" sx={{ mb: 2 }}>
      <Toolbar sx={{ justifyContent: 'space-between' }}>

        {/* Left side: Logo, Title, Navigation Icons */}
        <Box display="flex" alignItems="center" sx={{ flexGrow: 1 }}>
          <Box component="img" src={WuLogo} alt="WU Logo" sx={{ height: 36, mr: 2 }} />

          <Typography variant="h6" sx={{ fontWeight: 600, mr: 3 }}>
            Western Union – LACA
            {currentPartition && (
              <> • {currentPartition.replace('CR.Costa Rica Partition','Costa Rica')}</>
            )}
          </Typography>

          {/* Dashboard Icon (green) */}
          <IconButton
            size="large"
            color="inherit"
            onClick={() => {
              const target = currentPartition
                ? `/partition/${encodeURIComponent(currentPartition)}`
                : '/';
              navigate(target);
            }}
          >
            <HomeIcon sx={{ color: '#4caf50' }} />
          </IconButton>

          {/* History Icon (orange) */}
          <IconButton
            size="large"
            color="inherit"
            onClick={() => {
              const target = currentPartition
                ? makePartitionPath('history')
                : '/history';
              navigate(target);
            }}
          >
            <HistoryIcon sx={{ color: '#F88379' }} />
          </IconButton>

          {/* Details Icon (blue) */}
          {currentPartition && (
            <IconButton
              size="large"
              color="inherit"
              onClick={() => navigate(makePartitionPath('details'))}
            >
              <ListAltIcon sx={{ color: '#2196f3' }} />
            </IconButton>
          )}
        </Box>

        {/* Right side: Partition selector + Flag */}
        <Box display="flex" alignItems="center">
          <Select
            size="small"
            value={currentPartition}
            displayEmpty
            onChange={e => handlePartitionChange(e.target.value)}
            sx={{ bgcolor: 'background.paper', mr: 2 }}
          >
            <MenuItem value="">— Select Partition —</MenuItem>
            {partitionList.map(p => (
              <MenuItem key={p} value={p}>
                {p.replace('Partition', '')}
              </MenuItem>
            ))}
          </Select>
          <Box component="img" src={selectedFlag} alt="Flag" sx={{ height: 50 }} />
        </Box>
      </Toolbar>
    </AppBar>
  );
}






// src/pages/Dashboard.jsx

import React, { useEffect, useState } from 'react';
import {
  Container,
  Box,
  Typography,
  Skeleton,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Button,
  Divider
} from '@mui/material';
import TodayIcon from '@mui/icons-material/Today';
import SyncIcon from '@mui/icons-material/Sync';
import ApartmentIcon from '@mui/icons-material/Apartment';
import BusinessIcon from '@mui/icons-material/Business';


import { useNavigate } from 'react-router-dom';

import Header from '../components/Header';
import Footer from '../components/Footer';
import SummaryCard from '../components/SummaryCard';
import ChartCard from '../components/ChartCard';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import { partitionList } from '../services/occupancy.service';


export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');
  const [partition, setPartition] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  if (error) {
    return (
      <Box width="100vw%" py={4}>
        <Typography color="error" align="center">
          Error loading live data
        </Typography>
      </Box>
    );
  }

  // Build and sort partitions
  const regions = data?.realtime || {};
  const partitions = partitionList
    .map(name => {
      const key = Object.keys(regions).find(k => k.includes(name));
      const p = key ? regions[key] : {};
      return {
        name,
        total: p.total || 0,
        Employee: p.Employee || 0,
        Contractor: p.Contractor || 0,
        TempBadge: p.TempBadge || 0,
        floors: p.floors || {}
      };
    })
    .sort((a, b) => b.total - a.total);

  // Totals
  const todayTot   = data?.today?.total    ?? 0;
  const todayEmp   = data?.today?.Employee ?? 0;
  const todayCont  = data?.today?.Contractor ?? 0;
  const realtimeTot  = partitions.reduce((sum, p) => sum + p.total, 0);
  const realtimeEmp  = partitions.reduce((sum, p) => sum + p.Employee, 0);
  const realtimeCont = partitions.reduce((sum, p) => sum + p.Contractor, 0);

  return (
    <>
      <Header />

      <Container
        maxWidth={false}
        disableGutters
        sx={{
          pt: 1,
          pb: 2,
          px: '20px',        // ← exactly 20px padding both sides
        }}
      >
        {/* Top summary cards */}
        <Box
          display="flex"
          alignItems="stretch"
          sx={{ mb: 1, width: '100vw%' }}
        >
          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Today’s Headcount"
              total={todayTot}
              stats={[
                { label: 'Employees',   value: todayEmp },
                { label: 'Contractors', value: todayCont }
              ]}
              // sx={{ height: 190, border: '2px solid #FFC107' }}
                          icon={<TodayIcon />}
            sx={{ height: 190, border: '2px solid #FFC107' }}
            />
          </Box>

          <Divider
            // orientation="vertical"
            flexItem
            sx={{ mx: 1 }}
          />

          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Realtime Headcount"
              total={realtimeTot}
              stats={[
                { label: 'Employees',   value: realtimeEmp },
                { label: 'Contractors', value: realtimeCont }
              ]}
              // sx={{ height: 190, border: '2px solid #FFC107' }}

           icon={<SyncIcon />}
            sx={{ height: 190, border: '2px solid #FFC107' }}

            />
          </Box>
        </Box>

        {/* Partition cards */}
        <Box mt={4} sx={{ width: '100vw%', display: 'flex', flexWrap: 'wrap', gap: 1 }}>
          {loading ? (
            <Skeleton variant="rectangular" width="100vw%" height={240} />
          ) : (
            // partitions.map(p => (
            //   <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
            //     <SummaryCard
            //       title={p.name}
            //       total={p.total}
            //       stats={[
            //         { label: 'Employees',   value: p.Employee },
            //         { label: 'Contractors', value: p.Contractor },
            //         // only show TempBadge on Costa Rica
            //         ...(p.name === 'CR.Costa Rica Partition'
            //           ? [{ label: 'Temp Badge', value: p.TempBadge }]
            //           : [])
            //       ]}
            //       sx={{ width: '100vw%', border: '2px solid #FFC107' }}
            //     />
            //   </Box>

            partitions.map(p => (
              <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                <SummaryCard
                  title={p.name}
                  icon={<ApartmentIcon />}
                  total={p.total}
                  stats={[
                    { label: 'Employees',   value: p.Employee },
                    { label: 'Contractors', value: p.Contractor },
                    // only show TempBadge on Costa Rica
                    ...(p.name === 'CR.Costa Rica Partition'
                      ? [{ label: 'Temp Badge', value: p.TempBadge }]
                      : [])
                  ]}
                  sx={{ width: '100vw%', border: '2px solid #FFC107' }}
                />
              </Box>
            ))
         )}
       </Box>



        {/* Live totals chart */}
        <Box mt={4} sx={{ width: '100vw%' ,p:2, border: '2px solid #FFC107' }}>
          <Box display="flex" justifyContent="space-between" alignItems="center">
            <Typography variant="h6" gutterBottom>
              Live Totals by Partition
            </Typography>
            <Typography variant="body2" color="textSecondary">
              Last updated: {lastUpdate}
            </Typography>
          </Box>

          {loading ? (
            <Skeleton variant="rectangular" width="100%" height={320} />
          ) : (
  <ChartCard
    chartType="bar"                  // new prop
    chartHeight={360}
    data={partitions.map((p,i) => ({
     name: p.name,
      value: p.total,
      fill: i % 2 === 0 ? '#FFC107' : '#B0BEC5'
    }))}
    dataKey="value"
    colors={{ head: '#FFC107', cap: '#B0BEC5' }}

     // Pass in the live breakdown for Employees / Contractors / TempBadge
     breakdown={{
       Employee: realtimeEmp,
       Contractor: realtimeCont,
       TempBadge: partitions.reduce((sum,p)=>sum+p.TempBadge,0),
     }}



    sx={{ border: '2px solid #FFC107' }}
  />
          )}
        </Box>
      </Container>

      <footer style={{
        backgroundColor: '#000000',
        color: '#FFC107',
        padding: '1.5rem 0',
        textAlign: 'center',
        marginTop: 0,
        borderTop: '2px solid #FFC107',
        fontSize: '0.95rem',
        lineHeight: '1.6'
      }}>
        <div><strong>Global Security Operations Center</strong><br/>
          Live HeadCount against Occupancy dashboard for Western Union — Real-time occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
             style={{ color: '#FFC107', textDecoration: 'underline' }}>
            GSOC Mail
          </a>&nbsp;|&nbsp;
          Landline:&nbsp;<span style={{ color: '#FFC107' }}>+91-020-67632394</span>
        </div>
      </footer>
    </>
  );
}










//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\SummaryCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box, Grid } from '@mui/material';

export default function SummaryCard({ title, total, stats, icon, sx = {} }) {

  return (
    <Card variant="outlined" sx={{ px: 2, py: 1, ...sx }}>
      <CardContent sx={{ textAlign: 'center' }}>
     
             {/* Icon + Title */}
        <Box display="flex" justifyContent="center" alignItems="center" mb={1}>
          {icon && (
            <Box component="span" sx={{ mr: 1, fontSize: 32, color: 'primary.main' }}>
              {icon}
            </Box>
          )}
          <Typography variant="subtitle1" gutterBottom>
            {title}
          </Typography>
        </Box>

     
     
        {total != null && (
          <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
            <Typography variant="h4" sx={{ mr: 1 }}>
              {total}
            </Typography>
            {/* <Typography variant="caption">Total</Typography> */}
          
          </Box>
        )}
        <Grid container spacing={1} justifyContent="center">
          {stats.map(({ label, value }) => (
            <Grid key={label} item xs={6}>
              <Typography variant="caption">{label}</Typography>
              <Typography variant="h6">{value}</Typography>
            </Grid>
          ))}
        </Grid>
      </CardContent>
    </Card>
  );
}









