// src/data/seatCapacities.js
const seatCapacities = {
  "Costa Rica": 1500,
  "Mexico": 500,
  "Argentina": 700,
  "Panama": 400,
  "Peru": 600,
  "Brazil": 800
};

export default seatCapacities;







// src/theme/westernUnionTheme.js

export default {
  palette: {
    mode: 'dark',
    primary: {
      main: '#000000',
      contrastText: '#ffe600'
    },
    secondary: {
      main: '#FFC107',
      contrastText: '#FFF'
    },
    background: {
      default: '#1c1c1c',
      paper: '#2c2c2c'
    },
    text: {
      primary: '#ffe600',
      secondary: '#ffffff'
    }
  },
  typography: {
    fontFamily: '"Roboto", "Helvetica", "Arial", sans-serif',
    h5: { fontWeight: 600 },
    h6: { fontWeight: 500 }
  },
  components: {
    MuiButton: {
      styleOverrides: {
        root: {
          textTransform: 'none'
        }
      }
    },
    MuiCard: {
      styleOverrides: {
        root: {
          borderColor: '#FFC107',
          backgroundColor: '#2c2c2c',
          color: '#ffe600'
        }
      }
    },
    MuiPaper: {
      styleOverrides: {
        root: {
          backgroundColor: '#2c2c2c',
          color: '#ffe600'
        }
      }
    },
    MuiSelect: {
      styleOverrides: {
        select: {
          color: '#ffe600',
          backgroundColor: '#1c1c1c'
        }
      }
    }
  }
};










// src/components/SummaryCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box, Grid } from '@mui/material';

export default function SummaryCard({ title, total, stats, sx = {} }) {
  return (
    <Card variant="outlined" sx={{
      px: 2,
      py: 3,
      background: '#fffde7',
      borderLeft: '6px solid #000000',
      borderRadius: 2,
      transition: 'transform 0.3s ease',
      '&:hover': {
        transform: 'scale(1.02)',
        boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.2)'
      },
      ...sx
    }}>
      <CardContent sx={{ textAlign: 'center', p: 1 }}>
        <Typography variant="subtitle1" gutterBottom fontWeight="bold" color="primary">
          {title}
        </Typography>

        {total != null && (
          <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
            <Typography variant="h4" fontWeight="bold" sx={{ mr: 1, color: '#000' }}>
              {total}
            </Typography>
            <Typography variant="caption" color="textSecondary">
              Total
            </Typography>
          </Box>
        )}

        <Grid container spacing={0.5} justifyContent="center">
          {stats.map(({ label, value }) => (
            <Grid item xs={6} key={label}>
              <Typography variant="caption" color="textSecondary" fontWeight="bold">
                {label}
              </Typography>
              <Typography variant="h6" fontWeight="bold" sx={{ color: '#000' }}>
                {value}
              </Typography>
            </Grid>
          ))}
        </Grid>
      </CardContent>
    </Card>
  );
}












// src/components/ChartCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend, LabelList
} from 'recharts';

export default function ChartCard({
  title,
  data = [],
  dataKey = 'value',
  chartHeight = 250
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card variant="outlined" sx={{ mb: 2 }}>
        <CardContent sx={{ textAlign: 'center', p: 1 }}>
          <Typography variant="h6" fontWeight="bold">
            {title}
          </Typography>
          <Typography variant="body2" color="textSecondary">
            No data to display.
          </Typography>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card variant="outlined" sx={{ mb: 2, background: '#fffde7' }}>
      <CardContent sx={{ textAlign: 'center', p: 2 }}>
        <Typography variant="h6" fontWeight="bold" gutterBottom>
          {title}
        </Typography>
        <Box sx={{ width: '100%', height: chartHeight }}>
          <ResponsiveContainer width="100%" height="100%">
            <BarChart data={data}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="name" tick={{ fontSize: 12, fontWeight: 600 }} />
              <YAxis tick={{ fontSize: 12, fontWeight: 600 }} />
              <Tooltip />
              <Legend />
              <Bar dataKey={dataKey} fill="#FFC107" radius={[6, 6, 0, 0]}>
                <LabelList dataKey={dataKey} position="top" style={{ fontWeight: 'bold' }} />
              </Bar>
            </BarChart>
          </ResponsiveContainer>
        </Box>
      </CardContent>
    </Card>
  );
}









Update all above changes and make Ui More Interactive and Brand , dont make unnecessary changes for ligic so 
Give me all updated files varefully and smothly

also i suggest use infographic theme to display chart and cards .

// src/pages/Dashboard.jsx

import React, { useEffect, useState } from 'react';
import {
  Container,
  Box,
  Typography,
  Skeleton,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Button,
  Divider
} from '@mui/material';
import { useNavigate } from 'react-router-dom';

import Header from '../components/Header';
import Footer from '../components/Footer';
import SummaryCard from '../components/SummaryCard';
import ChartCard from '../components/ChartCard';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import { partitionList } from '../services/occupancy.service';

export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');
  const [partition, setPartition] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  if (error) {
    return (
      <Box width="100vw%" py={4}>
        <Typography color="error" align="center">
          Error loading live data
        </Typography>
      </Box>
    );
  }

  // Build and sort partitions
  const regions = data?.realtime || {};
  const partitions = partitionList
    .map(name => {
      const key = Object.keys(regions).find(k => k.includes(name));
      const p = key ? regions[key] : {};
      return {
        name,
        total: p.total || 0,
        Employee: p.Employee || 0,
        Contractor: p.Contractor || 0,
        TempBadge: p.TempBadge || 0,
        floors: p.floors || {}
      };
    })
    .sort((a, b) => b.total - a.total);

  // Totals
  const todayTot   = data?.today?.total    ?? 0;
  const todayEmp   = data?.today?.Employee ?? 0;
  const todayCont  = data?.today?.Contractor ?? 0;
  const realtimeTot  = partitions.reduce((sum, p) => sum + p.total, 0);
  const realtimeEmp  = partitions.reduce((sum, p) => sum + p.Employee, 0);
  const realtimeCont = partitions.reduce((sum, p) => sum + p.Contractor, 0);

  return (
    <>
      <Header />

      <Container
        maxWidth={false}
        disableGutters
        sx={{
          pt: 2,
          pb: 4,
          px: '20px',        // ← exactly 20px padding both sides
        }}
      >
        {/* Top summary cards */}
        <Box
          display="flex"
          alignItems="stretch"
          sx={{ mb: 4, width: '100vw%' }}
        >
          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Today’s Headcount"
              total={todayTot}
              stats={[
                { label: 'Employees',   value: todayEmp },
                { label: 'Contractors', value: todayCont }
              ]}
              sx={{ height: 150 }}
            />
          </Box>

          <Divider
            orientation="vertical"
            flexItem
            sx={{ mx: 2 }}
          />

          <Box sx={{ flex: 1 }}>
            <SummaryCard
              title="Realtime Headcount"
              total={realtimeTot}
              stats={[
                { label: 'Employees',   value: realtimeEmp },
                { label: 'Contractors', value: realtimeCont }
              ]}
              sx={{ height: 150 }}
            />
          </Box>
        </Box>

        {/* Partition cards */}
        <Box mt={4} sx={{ width: '100vw%', display: 'flex', flexWrap: 'wrap', gap: 1 }}>
          {loading ? (
            <Skeleton variant="rectangular" width="100vw%" height={240} />
          ) : (
            partitions.map(p => (
              <Box key={p.name} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                <SummaryCard
                  title={p.name}
                  total={p.total}
                  stats={[
                    { label: 'Employees',   value: p.Employee },
                    { label: 'Contractors', value: p.Contractor },
                    // ...(p.TempBadge ? [{ label: 'TempBadge', value: p.TempBadge }] : [])

  // only show TempBadge on Costa Rica
  ...(p.name === 'CR.Costa Rica Partition' && p.TempBadge
     ? [{ label: 'TempBadge', value: p.TempBadge }]
     : [])

                  ]}
                  sx={{ width: '100vw%' }}
                />
              </Box>
            ))
          )}
        </Box>

        {/* Live totals chart */}
        <Box mt={4} sx={{ width: '100vw%' }}>
          <Typography variant="h6" gutterBottom>
            Live Totals by Partition
          </Typography>
          {loading ? (
            <Skeleton variant="rectangular" width="100%" height={280} />
          ) : (
            <ChartCard
              title="Partition Totals"
              chartHeight={280}
              data={partitions.map(p => ({ name: p.name, value: p.total }))}
            />
          )}
        </Box>

        {/* Partition drill-down */}
        <Box mt={4} sx={{ width: '100vw%' }}>
          <FormControl fullWidth size="small">
            <InputLabel>Select Partition</InputLabel>
            <Select
              value={partition}
              label="Select Partition"
              onChange={e => setPartition(e.target.value)}
            >
              <MenuItem value="">— All —</MenuItem>
              {partitions.map(p => (
                <MenuItem key={p.name} value={p.name}>{p.name}</MenuItem>
              ))}
            </Select>
          </FormControl>

          {partition && !loading && (
            <Box mt={3} sx={{ width: '100vw%' }}>
              <Box display="flex" justifyContent="space-between" alignItems="center" mb={1}>
                <Typography variant="h6">{partition} – Floor Breakdown</Typography>
                <Button
                  variant="contained"
                  onClick={() => navigate(`/realtime/${encodeURIComponent(partition)}`)}
                >
                  See Swipe Details
                </Button>
              </Box>
              <ChartCard
                title="Live Floor Counts"
                chartHeight={240}
                data={Object.entries(
                  partitions.find(p => p.name === partition)?.floors || {}
                ).map(([floor, cnt]) => ({ name: floor, value: cnt }))}
              />
            </Box>
          )}
        </Box>
      </Container>

      <footer style={{
        backgroundColor: '#000000',
        color: '#FFC107',
        padding: '1.5rem 0',
        textAlign: 'center',
        marginTop: 0,
        borderTop: '2px solid #FFC107',
        fontSize: '0.95rem',
        lineHeight: '1.6'
      }}>
        <div><strong>Global Security Operations Center</strong><br/>
          Live HeadCount against Occupancy dashboard for Western Union — Real-time occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
             style={{ color: '#FFC107', textDecoration: 'underline' }}>
            GSOC Mail
          </a>&nbsp;|&nbsp;
          Landline:&nbsp;<span style={{ color: '#FFC107' }}>+91-020-67632394</span>
        </div>
      </footer>
    </>
  );
}



File 2


//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\ChartCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer
} from 'recharts';

export default function ChartCard({
  title,
  data = [],
  dataKey = 'value',
  chartHeight = 250,
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card variant="outlined" sx={{ mb: 2 }}>
        <CardContent sx={{ textAlign: 'center', p: 1 }}>
          <Typography variant="h6" gutterBottom fontWeight="bold">
            {title}
          </Typography>
          <Typography variant="body2" color="textSecondary">
            No data to display.
          </Typography>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card variant="outlined" sx={{ mb: 2 }}>
      <CardContent sx={{ textAlign: 'center', p: 1 }}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          {title}
        </Typography>
        <Box sx={{ width: '100%', height: chartHeight, mt: 1 }}>
          <ResponsiveContainer width="100%" height="100%">
            <BarChart data={data}>
              <XAxis dataKey="name" tick={{ fontWeight: 'bold', fontSize: 12 }} />
              <YAxis tick={{ fontWeight: 'bold', fontSize: 12 }} />
              <Tooltip />
              <Bar dataKey={dataKey} fill="#FFC107" />
            </BarChart>
          </ResponsiveContainer>
        </Box>
      </CardContent>
    </Card>
  );
}


file 3



//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\SummaryCard.jsx
import React from 'react';
import { Card, CardContent, Typography, Box, Grid } from '@mui/material';

export default function SummaryCard({ title, total, stats, sx = {} }) {
  return (
    <Card variant="outlined" sx={{ px: 1, py: 2, ...sx }}>
      <CardContent sx={{ textAlign: 'center', p: 1 }}>
        <Typography variant="subtitle1" gutterBottom fontWeight="bold">
          {title}
        </Typography>

        {total != null && (
          <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
            <Typography variant="h4" fontWeight="bold" sx={{ mr: 1 }}>
              {total}
            </Typography>
            <Typography variant="caption" color="textSecondary">
              Total
            </Typography>
          </Box>
        )}

        <Grid container spacing={0.5} justifyContent="center">
          {stats.map(({ label, value }) => (
            <Grid item xs={6} key={label}>
              <Typography variant="caption" color="textSecondary" fontWeight="bold">
                {label}
              </Typography>
              <Typography variant="h6" fontWeight="bold">
                {value}
              </Typography>
            </Grid>
          ))}
        </Grid>
      </CardContent>
    </Card>
  );
}


File 4
Specially make changes here chane background theme make dark theme brand Western union theme and update all files carefully

// src/theme/westernUnionTheme.js

export default {
  palette: {
    primary: {
      main: '#000000',    // WU Black
      contrastText: '#ffe600'
    },
    secondary: {
      main:  '#FFC107',  // WU yellow
      contrastText: '#FFF'
    },
    background: {
      default: '#FFC72C',
      paper: '#FFFDE7'

    }
  },
  typography: {
    fontFamily: '"Roboto", "Helvetica", "Arial", sans-serif',
    h5: { fontWeight: 600 },
    h6: { fontWeight: 500 }
  },
  components: {
    MuiButton: {
      styleOverrides: {
        root: {
          textTransform: 'none'
        }
      }
    },
    MuiCard: {
      styleOverrides: {
        root: {
          borderColor: '#FFC107'
        }
      }
    }
  }
};





