// src/utils/doorMap.js

module.exports = [
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL to WUIB Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL to WUIB Kitchen Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB to WUIB Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_RECEPTION Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Reception to WUIB Restrict`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL Main Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUPSIL Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUPSIL Side Storage Room Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_SERVER ROOM 1 Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Restricted Main Entrance 2 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Restricted Entrance 2 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_SERVER ROOM 2 Restricted Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_IT Storage Room Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_Vendor to WUIB Restricted Entrance 1 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Restricted Main Entrance 1 Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: '11th Floor',
  },
  {
    partition: 'AUT.Vienna',
    door: `EMEA_AUT_VIENNA_ICON_11FLR_WUIB Main Entrance Door`,
    inDirectionFloor: '11th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'Madrid',
    door: `ES MADRID MAIN DOOR`,
    inDirectionFloor: 'Madrid',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'Madrid',
    door: `ES MADRID SERVER ROOM`,
    inDirectionFloor: 'Madrid',
    outDirectionFloor: 'Madrid',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Balcony Door From the Kitchen 1`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Balcony Door From Kitchen 2`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Side Balcony Entrance`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Main Entrance`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Vender Elevator Door`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Server Room`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Dublin',
  },
  {
    partition: 'IE.Dublin',
    door: `EMEA_IRE_DUB_Office to Stairwell Door`,
    inDirectionFloor: 'Dublin',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_01_Main Entrance`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_04_Server Restricted Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_02_Reception`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_07_03_Comsroom`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'MA.Casablanca',
    door: `EMEA_MOR_CASA_7th Floor_Emergency Exit`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_main entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_training room entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_office entrance`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_IT room`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_server Restricted Door`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'RU.Moscow',
    door: `EMEA_RU_Moscow_safe/cashier room`,
    inDirectionFloor: 'Moscow',
    outDirectionFloor: 'Moscow',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Emergency Exit Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Server Room Restricted Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Rome',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Main Entrance Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'IT.Rome',
    door: `EMEA_Rome_Secondary Main Entrance Door`,
    inDirectionFloor: 'Rome',
    outDirectionFloor: 'Rome',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor elevator lobby`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor IDF Restricted Door`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Archive/IT`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th Floor_Emergency Exit`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Stairwell`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_10th floor_Supply Room`,
    inDirectionFloor: '10th Floor',
    outDirectionFloor: '10th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Middle IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Middle OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Right IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Left OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Left IN`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Right OUT`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Speedgate Card Collector`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_ Delta_6th Floor_East Side Emergency Exit`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_6th Floor_West Side Emergency Exit`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_9th Floor_East Side Emergency Exit`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_9th Floor_West Side Emergency Exit`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_8th Floor_East Side Emergency Exit`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_8th Floor_West Side Emergency Exit`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_5th Floor_East Side Emergency Exit`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_5th Floor_West Side Emergency Exit`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_4th Floor_East Side Emergency Exit`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_4th Floor_West Side Emergency Exit`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_3th Floor_East Side Emergency Exit`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_3th Floor_West Side Emergency Exit`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_2th Floor_East Side Emergency Exit`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_2th Floor_West Side Emergency Exit`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Recreation Area Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Lobby Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Conference Hall Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_East Stairway Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_West Stairway Emergency  Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_1st Floor_Central Stairway Emergency Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Service Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_DELTA_6th Floor_Office Entrance`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Barbora doors`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Zygimantas Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Elevator Lobby East`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Elevator Lobby West`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Supply Room`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_9th Floor_Server Room Restricted Door`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Elevator Lobby East`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Elevator Lobby West`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Supply Room`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_8th Floor_Server Room Restricted Door`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Elevator Lobby East`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Elevator Lobby West`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Supply Room`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_7th Floor_Server Room Restricted Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Elevator Lobby East`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Elevator Lobby West`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_DELTA_6th_Floor_HR Archive`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_6th Floor_Server Restricted Door`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_IT Lab`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Elevator Lobby East`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Elevator Lobby West`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Server Restricted Door`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_4th Floor_Elevator Lobby East`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_4th Floor_Elevator Lobby West`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_4th Floor_Supply Room`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: '4th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_4th Floor_Server Restricted Door`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: '4th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_3rd Floor_Elevator Lobby East`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_3rd Floor_Elevator Lobby West`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_3rd Floor_Supply Room`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: '3rd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_3rd Floor_Server Restricted Door`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: '3rd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_2nd Floor_Elevator Lobby East`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_2nd Floor_Elevator Lobby West`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_2nd Floor_Supply Room`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_2nd Floor_Server Restricted Door`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: '2nd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Main Entrance Tambour`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_Ground Floor_UPS Restricted Door`,
    inDirectionFloor: 'Ground Floor',
    outDirectionFloor: 'Ground Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Elevator Lobby West`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Training Center West`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Security Room`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Server Restricted Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Service Entrance Tambour`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Training Center East`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Stairway`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Main Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_Basement Elevator Lobby`,
    inDirectionFloor: 'Basement',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_Basement Fire Suppression Argon canister storage`,
    inDirectionFloor: 'Basement',
    outDirectionFloor: 'Basement',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_5th Floor_Fire Suppression Argon canister storage`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_DELTA_1st Floor_Eleveator Lobby East`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_7th Floor_East Side Emergency Exit`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_Delta_7th Floor_West Side Emergency Exit`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_Main Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_Secondary Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_UPS Restricted Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_Emergency Door East`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_Emergency Door North`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_1st Floor_Emergency Door West`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_2nd Floor_East Door`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: '2nd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_2nd floor_West Door`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: '2nd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_2nd Floor_IDF Restricted Door`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: '2nd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_2nd Floor Emergency stairway Door 1`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LTU_VNO_GAMA_2nd Floor_Emergency stairway Door 2`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Storage`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_6th Flr_Main Entrance`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_6th Flr_Server Restricted Door`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_6th Flr_Emergency Exit Door`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_8th Flr_Emergency Exit Door`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_9th Flr_Emergency Exit Door`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_6th Flr_Storage`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: '6th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Main Entrance`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Server Restricted Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_7th Flr_Emergency Exit Door`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Storage 1`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Storage 2`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Test Lab`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_8th Flr_Main Entrance`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_8th Flr_Stairway`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_8th Flr_Server Restricted Door`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_ 8th Flr Storage`,
    inDirectionFloor: '8th Floor',
    outDirectionFloor: '8th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_9th Flr_Main Entrance`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_9th Flr_Stairway`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_9th Flr_Server Restricted Door`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_9th Flr_Storage`,
    inDirectionFloor: '9th Floor',
    outDirectionFloor: '9th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `LT.VNO.GAMA.Panel05.Reset Ultra Output15`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `LT.VNO.GAMA.Panel07.Reset Ultra Output16`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: '7th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_6th Flr_Stairway`,
    inDirectionFloor: '6th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_7th Flr_Stairway`,
    inDirectionFloor: '7th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Main Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Emergency Exit Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Parking Stairway`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Security Room`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Parking`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Restaurant Door`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Lift Lobby`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Bikes Storage`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile1 Entry`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile2 Entry`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile3 Entry`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile1 Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile2 Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile3 Exit`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Info Room`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Turnstile Fire Control`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_WU Shop`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: '1st Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_EMEA_3rd Flr Stairway`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_3rd Flr_Main Entrance`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_3rd Flr_Server Restricted Door`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: '3rd Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_EMEA_3rd Flr_Emergency Exit Door`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_4th Flr_Stairway`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_4th Flr_Main Entrance`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_4th Flr_Server Restricted Door`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: '4th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_4th Flr_Emergency Exit Door`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_EMEA_5th Flr_Stairway`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_5th Flr_Main Entrance`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_5th Flr_Server Restricted Door`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: '5th Floor',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMAEMEA_5th Flr_Emergency Exit Door`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_2nd Flr_Parking`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_3rd Flr_Parking`,
    inDirectionFloor: '3rd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_4th Flr_Parking`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_5th Flr_Parking`,
    inDirectionFloor: '5th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_2nd Flr_First Parking Door`,
    inDirectionFloor: '2nd Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Electrical room`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st Flr_Stairway Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_1st/2nd Flr_Stairway Entrance`,
    inDirectionFloor: '1st Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'LT.Vilnius',
    door: `EMEA_LT_VNO_GAMA_4th/5th Flr_Stairway Entrance`,
    inDirectionFloor: '4th Floor',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'DU.Abu Dhab',
    door: `EMEA_UAE_DUB_Main Entrance Door`,
    inDirectionFloor: 'Dubai',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'DU.Abu Dhab',
    door: `EMEA_UAE_DUB_Rear Entrance Door`,
    inDirectionFloor: 'Dubai',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'DU.Abu Dhab',
    door: `EMEA_UAE_DUB_Pantry Entrance Door`,
    inDirectionFloor: 'Dubai',
    outDirectionFloor: 'Dubai',
  },
  {
    partition: 'DU.Abu Dhab',
    door: `EMEA_UAE_DUB_IDF Room Door`,
    inDirectionFloor: 'Dubai',
    outDirectionFloor: 'Dubai',
  },
  {
    partition: 'UK.London',
    door: `WU-UK-MH-MDF ROOM`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'London',
  },
  {
    partition: 'UK.London',
    door: `WU-UK-MH-NORTH LIFT LOBBY ENTRY`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'UK.London',
    door: `WU-UK-MH-STAIRCORE MAIN ENTRY`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'UK.London',
    door: `WU-UK-MH-SOUTH LIFT LOBBY ENTRY`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'Out of office',
  },
  {
    partition: 'UK.London',
    door: `WU-UK-MH-FIRE EXIT DOOR`,
    inDirectionFloor: 'London',
    outDirectionFloor: 'Out of office',
  },
];







// src/config/db.js
require('dotenv').config();
const sql = require('mssql');

// Pull in and trim env-vars
const DB_USER     = (process.env.DB_USER     || '').trim();
const DB_PASSWORD = (process.env.DB_PASSWORD || '').trim();
const DB_SERVER   = (process.env.DB_SERVER   || '').trim();
const DB_DATABASE = (process.env.DB_DATABASE || '').trim();
const DB_PORT     = parseInt((process.env.DB_PORT || '').trim(), 10);

console.log(
  '🔍 DB CONFIG:',
  `user="${DB_USER}"`,
  `server="${DB_SERVER}"`,
  `database="${DB_DATABASE}"`,
  `port=${DB_PORT}`
);

const dbConfig = {
  user:     DB_USER,
  password: DB_PASSWORD,
  server:   DB_SERVER,
  port:     DB_PORT,
  database: DB_DATABASE,
  options: {
    encrypt: false,                // for on-prem SQL Server
    trustServerCertificate: true,
    enableArithAbort: true
  },
  pool: {
    max: 10,
    min: 0,
    idleTimeoutMillis: 30000
  }
};

// Create a single connection-pool promise and export it immediately
const poolPromise = sql.connect(dbConfig)
  .then(pool => {
    console.log('✅ MSSQL connected');
    return pool;
  })
  .catch(err => {
    console.error('❌ MSSQL connection failed', err);
    process.exit(1);
  });

module.exports = {
  sql,
  poolPromise
};









TypeError: Cannot read properties of undefined (reading 'request')
    at exports.fetchLiveOccupancy (C:\Users\W0024618\Desktop\emea-occupancy-backend\src\services\occupancy.service.js:87:29)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async exports.getLiveSummary (C:\Users\W0024618\Desktop\emea-occupancy-backend\src\controllers\occupancy.controller.js:44:20)
PS C:\Users\W0024618\Desktop\emea-occupancy-backend> node server.js




// src/config/db.js
require('dotenv').config();
const sql = require('mssql');

// Pull in raw env-vars
const rawUser     = process.env.DB_USER;
const rawPassword = process.env.DB_PASSWORD;
const rawServer   = process.env.DB_SERVER;
const rawDatabase = process.env.DB_DATABASE;
const rawPort     = process.env.DB_PORT;

// Show lengths—if you’ve got extra spaces/BOM, you’ll see them here
console.log(`DB_USER     = "${rawUser}"     (length ${rawUser?.length})`);
console.log(`DB_PASSWORD = "${rawPassword}" (length ${rawPassword?.length})`);
console.log(`DB_SERVER   = "${rawServer}"   (length ${rawServer?.length})`);
console.log(`DB_DATABASE = "${rawDatabase}" (length ${rawDatabase?.length})`);
console.log(`DB_PORT     = "${rawPort}"     (length ${rawPort?.length})`);

// Trim everything
const DB_USER     = rawUser?.trim();
const DB_PASSWORD = rawPassword?.trim();
const DB_SERVER   = rawServer?.trim();
const DB_DATABASE = rawDatabase?.trim();
const DB_PORT     = parseInt(rawPort?.trim(), 10);

const dbConfig = {
  server: DB_SERVER,
  port:   DB_PORT,
  database: DB_DATABASE,
  authentication: {
    type: 'default',
    options: {
      userName: DB_USER,
      password: DB_PASSWORD
    }
  },
  options: {
    encrypt: true,
    trustServerCertificate: true
  },
  pool: {
    max: 10,
    min: 0,
    idleTimeoutMillis: 30000
  }
};

console.log(
  `🔍 Connecting to ${DB_SERVER}:${DB_PORT} ` +
  `DB="${DB_DATABASE}" as ${DB_USER}`
);

sql
  .connect(dbConfig)
  .then(pool => {
    console.log('✅ MSSQL connected');
    module.exports = { sql, poolPromise: Promise.resolve(pool) };
  })
  .catch(err => {
    console.error('❌ MSSQL connection failed', err);
    process.exit(1);
  });





// C:\Users\W0024618\Desktop\emea-occupancy-backend\src\controllers\occupancy.controller.js

const service = require('../services/occupancy.service');
const doorMap = require('../utils/doorMap'); 

/**
 * Returns true if this PersonnelType counts as Employee.
 * Everything else (including blank) counts as Contractor.
 */
function isEmployeeType(pt) {
  return pt === 'Employee'
      || pt === 'Terminated Employee'
      || pt === 'Terminated Personnel';
}

/**
 * Look up floor for a given record by matching door + partition.
 */
function lookupFloor(partition, door, direction, unmappedSet) {
  const entry = doorMap.find(d =>
    d.partition === partition && d.door === door
  );
  if (!entry) {
    unmappedSet.add(`${partition} | ${door}`);
    return null;
  }
  return direction === 'InDirection'
    ? entry.inDirectionFloor
    : entry.outDirectionFloor;
}

exports.getLiveOccupancy = async (req, res) => {
  try {
    const data = await service.fetchLiveOccupancy();
    res.json({ success: true, count: data.length, data });
  } catch (err) {
    console.error(err);
    res.status(500).json({ success: false, message: 'Live occupancy fetch failed' });
  }
};

exports.getLiveSummary = async (req, res) => {
  try {
    const swipes = await service.fetchLiveOccupancy();

    // 1. TODAY’S HEADCOUNT: first swipe per person
    const firstByPerson = {};
    swipes.forEach(r => {
      const prev = firstByPerson[r.PersonGUID];
      const t = new Date(r.LocaleMessageTime).getTime();
      if (!prev || t < new Date(prev.LocaleMessageTime).getTime()) {
        firstByPerson[r.PersonGUID] = r;
      }
    });
    const todayRecs = Object.values(firstByPerson);
    const today = { total: 0, Employee: 0, Contractor: 0 };
    todayRecs.forEach(r => {
      today.total++;
      if (isEmployeeType(r.PersonnelType)) today.Employee++;
      else today.Contractor++;
    });

    // 2. REAL-TIME: last swipe per person, only InDirection
    const lastByPerson = {};
    swipes.forEach(r => {
      const prev = lastByPerson[r.PersonGUID];
      const t = new Date(r.LocaleMessageTime).getTime();
      if (!prev || t > new Date(prev.LocaleMessageTime).getTime()) {
        lastByPerson[r.PersonGUID] = r;
      }
    });

    const realtime = {};
    const unmappedDoors = new Set();
    Object.values(lastByPerson).forEach(r => {
      if (r.Direction !== 'InDirection') return;
      const p = r.PartitionName2;
      // initialize per-partition counters
      if (!realtime[p]) {
        realtime[p] = { total: 0, Employee: 0, Contractor: 0, floors: {} };
      }
      realtime[p].total++;
      if (isEmployeeType(r.PersonnelType)) realtime[p].Employee++;
      else realtime[p].Contractor++;

      const floor = lookupFloor(p, r.Door, r.Direction, unmappedDoors) || 'Unmapped';
      realtime[p].floors[floor] = (realtime[p].floors[floor] || 0) + 1;
    });

    if (unmappedDoors.size) {
      console.warn('Unmapped doors:\n' + Array.from(unmappedDoors).join('\n'));
    }

    return res.json({
      success: true,
      today,
      realtime,
      details: Object.values(lastByPerson)
    });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ success: false, message: 'Live summary failed' });
  }
};

exports.getHistoricalOccupancy = async (req, res) => {
  const location = req.params.location || null;
  try {
    const raw = await service.fetchHistoricalOccupancy(location);

    // first swipe per person per date
    const byDate = raw.reduce((acc, r) => {
      const iso = (r.LocaleMessageTime instanceof Date)
        ? r.LocaleMessageTime.toISOString()
        : r.LocaleMessageTime;
      const date = iso.slice(0,10);
      acc[date] = acc[date] || {};
      const prev = acc[date][r.PersonGUID];
      if (!prev || new Date(iso) < new Date(prev.LocaleMessageTime)) {
        acc[date][r.PersonGUID] = { ...r, LocaleMessageTime: iso };
      }
      return acc;
    }, {});

    const summaryByDate = [];
    const details = [];

    Object.keys(byDate).sort().forEach(date => {
      const recs = Object.values(byDate[date]);
      details.push(...recs);

      // initialize counts
      const regionCounts = { total: 0, Employee: 0, Contractor: 0 };
      const partitionCounts = {};

      recs.forEach(r => {
        regionCounts.total++;
        if (isEmployeeType(r.PersonnelType)) regionCounts.Employee++;
        else regionCounts.Contractor++;

        if (!location) {
          const p = r.PartitionName2;
          if (!partitionCounts[p]) {
            partitionCounts[p] = { total: 0, Employee: 0, Contractor: 0 };
          }
          partitionCounts[p].total++;
          if (isEmployeeType(r.PersonnelType)) partitionCounts[p].Employee++;
          else partitionCounts[p].Contractor++;
        }
      });

      summaryByDate.push({
        date,
        day: new Date(date).toLocaleDateString('en-US', { weekday:'long' }),
        region: location
          ? { name: location, ...regionCounts }
          : { name: 'EMEA', ...regionCounts },
        partitions: location ? undefined : partitionCounts
      });
    });

    return res.json({ success: true, summaryByDate, details });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ success: false, message: 'Historical fetch failed' });
  }
};






C:\Users\W0024618\Desktop\emea-occupancy-backend\src\routes\occupancy.routes.js

const express = require('express');
const router  = express.Router();
const controller = require('../controllers/occupancy.controller');

// Live raw and summary
router.get('/live',         controller.getLiveOccupancy);
router.get('/live-summary', controller.getLiveSummary);

// History: all partitions or a single one
router.get('/history',           controller.getHistoricalOccupancy);
router.get('/history/:location', controller.getHistoricalOccupancy);

module.exports = router;




C:\Users\W0024618\Desktop\emea-occupancy-backend\src\services\occupancy.service.js


const { poolPromise, sql } = require('../config/db');

/**
 * EMEA partition list
 */
const partitionList = [
  'AUT.Vienna',
  'DU.Abu Dhab',
  'IE.Dublin',
  'IT.Rome',
  'LT.Vilnius',
  'MA.Casablanca',
  'RU.Moscow',
  'UK.London'
];

/**
 * Live occupancy (today)
 */
exports.fetchLiveOccupancy = async () => {
  const pool = await poolPromise;
  const partitionsSql = partitionList.map(p => `'${p.replace("'", "''")}'`).join(',');

  const query = `
    WITH CombinedQuery AS (
      SELECT
        DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
        t1.ObjectName1,
        t1.ObjectName2            AS Door,
        CASE
          WHEN t3.Name IN ('Contractor','Terminated Contractor')
            THEN t2.Text12
          ELSE CAST(t2.Int1 AS NVARCHAR)
        END                       AS EmployeeID,
        t2.text5                  AS Text5,
        t1.PartitionName2         AS PartitionName2,
        t1.ObjectIdentity1        AS PersonGUID,
        t3.Name                   AS PersonnelType,
        COALESCE(
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
          sc.value
        )                         AS CardNumber,
        t5a.value                 AS AdmitCode,
        t5d.value                 AS Direction
      FROM [ACVSUJournal_00010027].[dbo].[ACVSUJournalLog] AS t1
      LEFT JOIN [ACVSCore].[Access].[Personnel]     AS t2
        ON t1.ObjectIdentity1 = t2.GUID
      LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
        ON t2.PersonnelTypeId = t3.ObjectID
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred] AS t5a
        ON t1.XmlGUID = t5a.GUID AND t5a.Name = 'AdmitCode'
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred] AS t5d
        ON t1.XmlGUID = t5d.GUID AND t5d.Value IN ('InDirection','OutDirection')
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxml] AS t_xml
        ON t1.XmlGUID = t_xml.GUID
      LEFT JOIN (
        SELECT GUID, value
        FROM [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred]
        WHERE Name IN ('Card','CHUID')
      ) AS sc
        ON t1.XmlGUID = sc.GUID
      WHERE
        t1.MessageType = 'CardAdmitted'
        AND t1.PartitionName2 IN (${partitionsSql})
        AND CONVERT(DATE, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC))
            = CONVERT(DATE, GETDATE())
    )
    SELECT
      LocaleMessageTime,
      CONVERT(VARCHAR(10), LocaleMessageTime, 23) AS Dateonly,
      CONVERT(VARCHAR(8), LocaleMessageTime, 108) AS Swipe_Time,
      EmployeeID,
      PersonGUID,
      ObjectName1,
      Door,
      PersonnelType,
      CardNumber,
      Text5,
      PartitionName2,
      AdmitCode,
      Direction
    FROM CombinedQuery
    ORDER BY LocaleMessageTime ASC;
  `;

  const result = await pool.request().query(query);
  return result.recordset;
};

/**
 * Core raw‐data fetch for the past N days, all or by location.
 */
exports.fetchHistoricalData = async ({ days = 7, location = null }) => {
  const pool = await poolPromise;
  const partitionsSql = partitionList.map(p => `'${p.replace("'", "''")}'`).join(',');
  const locationFilter = location
    ? `AND t1.PartitionName2 = @location`
    : `AND t1.PartitionName2 IN (${partitionsSql})`;

  const query = `
    WITH Hist AS (
      SELECT
        DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
        t1.ObjectName1,
        t1.ObjectName2       AS Door,
        CASE
          WHEN t3.Name IN ('Contractor','Terminated Contractor') THEN t2.Text12
          ELSE CAST(t2.Int1 AS NVARCHAR)
        END                   AS EmployeeID,
        t2.text5             AS Text5,
        t1.PartitionName2    AS PartitionName2,
        t1.ObjectIdentity1   AS PersonGUID,
        t3.Name              AS PersonnelType,
        COALESCE(
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
          sc.value
        )                     AS CardNumber,
        t5a.value            AS AdmitCode,
        t5d.value            AS Direction,
        CONVERT(DATE, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)) AS SwipeDate
      FROM [ACVSUJournal_00010027].[dbo].[ACVSUJournalLog] AS t1
      LEFT JOIN [ACVSCore].[Access].[Personnel]     AS t2
        ON t1.ObjectIdentity1 = t2.GUID
      LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
        ON t2.PersonnelTypeId = t3.ObjectID
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred] AS t5a
        ON t1.XmlGUID = t5a.GUID AND t5a.Name = 'AdmitCode'
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred] AS t5d
        ON t1.XmlGUID = t5d.GUID AND t5d.Value IN ('InDirection','OutDirection')
      LEFT JOIN [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxml] AS t_xml
        ON t1.XmlGUID = t_xml.GUID
      LEFT JOIN (
        SELECT GUID, value
        FROM [ACVSUJournal_00010027].[dbo].[ACVSUJournalLogxmlShred]
        WHERE Name IN ('Card','CHUID')
      ) AS sc
        ON t1.XmlGUID = sc.GUID
      WHERE
        t1.MessageType = 'CardAdmitted'
        ${locationFilter}
        AND CONVERT(DATE, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC))
            >= DATEADD(DAY, -${days}, CONVERT(DATE, GETDATE()))
    )
    SELECT *
    FROM Hist
    ORDER BY LocaleMessageTime ASC;
  `;

  const req = pool.request();
  if (location) req.input('location', sql.NVarChar, location);
  const result = await req.query(query);
  return result.recordset;
};

/**
 * Public wrapper: always last 7 days, all or by location.
 */
exports.fetchHistoricalOccupancy = async (location) => {
  return exports.fetchHistoricalData({ days: 7, location: location || null });
};

module.exports.partitionList = partitionList;




C:\Users\W0024618\Desktop\emea-occupancy-backend\src\utils\timezones.js


module.exports = {
  'AUT.Vienna':       'Europe/Vienna',
  'DU.Abu Dhab':      'Asia/Dubai',
  'IE.Dublin':        'Europe/Dublin',
  'IT.Rome':          'Europe/Rome',
  'LT.Vilnius':       'Europe/Vilnius',
  'MA.Casablanca':    'Africa/Casablanca',
  'RU.Moscow':        'Europe/Moscow',
  'UK.London':        'Europe/London'
};




// src/app.js
const express = require('express');
const cors    = require('cors');
const occupancyRoutes = require('./routes/occupancy.routes');

const app = express();
app.use(express.json());
app.use(cors());

// Health check
app.get('/', (req, res) => res.send('🌍 EMEA Occupancy API Running'));

// Mount our occupancy routes
app.use('/api/occupancy', occupancyRoutes);

module.exports = app;




# .env (must be at C:\Users\W0024618\Desktop\emea-occupancy-backend\.env)
DB_USER=GSOC_Test
DB_PASSWORD=Westernuniongsoc@2025
DB_SERVER=SRVWUFRA0986V
DB_DATABASE=ACVSUJournal_00010027
DB_PORT=1433
PORT=3005





C:\Users\W0024618\Desktop\emea-occupancy-backend\package.json


{
  "name": "emea-occupancy-backend",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon src/server.js",
    "start": "node src/server.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "mssql": "^11.0.1",
    "nodemon": "^3.1.10"
  }
}




// server.js (at project root)
require('dotenv').config();           // ← load .env from project root

const app = require('./src/app');     // ← now points to src/app.js

const PORT = process.env.PORT || 3005;
app.listen(PORT, () => {
  console.log(`🚀 Server running on port ${PORT}`);
});




