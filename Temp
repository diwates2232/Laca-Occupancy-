C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\SummaryCard.jsx

// src/components/SummaryCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box, Grid } from '@mui/material';

export default function SummaryCard({
  title,
  total,
  stats,
  icon,
  titleColor,
  totalColor,
  statColors,
  sx = {}
}) {
  return (
    <Card
      variant="outlined"
      sx={{
        px: 2,
        py: 1,
        border: titleColor ? `2px solid ${titleColor}` : undefined,
        borderRadius: 2,
        bgcolor: 'rgba(0,0,0,0.4)',
        overflow: 'hidden',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'translateY(-4px) scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)'
        },
        ...sx
      }}
    >
      <CardContent sx={{ textAlign: 'center', p: 1 }}>
        {/* Icon + Title */}
        <Box display="flex" justifyContent="center" alignItems="center" mb={1}>
          {icon && (
            <Box component="span" sx={{ mr: 1, fontSize: 32, color: titleColor || 'primary.main' }}>
              {icon}
            </Box>
          )}
          <Typography
            variant="subtitle1"
            gutterBottom
            sx={ titleColor ? { color: titleColor } : undefined }
          >
            {title}
          </Typography>
        </Box>

        {/* Total */}
        {total != null && (
          <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
            <Typography
              variant="h4"
              sx={{
                mr: 1,
                ...(totalColor ? { color: totalColor } : undefined),
                transition: 'color 0.3s'
              }}
            >
              {total}
            </Typography>
          </Box>
        )}

        {/* Stats */}
        <Grid container spacing={1} justifyContent="center">
          {stats.map(({ label, value }, idx) => (
            <Grid key={label} item xs={6}>
              <Typography
                variant="caption"
                sx={ statColors && statColors[idx]
                  ? { color: statColors[idx], transition: 'color 0.3s' }
                  : {}
                }
              >
                {label}
              </Typography>
              <Typography
                variant="h6"
                sx={ statColors && statColors[idx]
                  ? { color: statColors[idx], transition: 'color 0.3s' }
                  : {}
                }
              >
                {value}
              </Typography>
            </Grid>
          ))}
        </Grid>
      </CardContent>
    </Card>
  );
}







C:\Users\W0024618\Desktop\emea-occupancy-frontend\src\components\SummaryCard.jsx
// src/components/SummaryCard.jsx
import React from 'react';
import { Card, CardContent, Typography, Box, Grid } from '@mui/material';

export default function SummaryCard({
  title,
  total,
  stats = [],
  icon,
  titleColor,
  totalColor,
  statColors = [],
  sx = {}
}) {
  return (
    <Card variant="outlined" sx={{ background: 'inherit', ...sx }}>
      <CardContent sx={{ textAlign: 'center', p: 2 }}>
        <Box display="flex" justifyContent="center" alignItems="center" mb={1}>
          {icon && (
            <Box component="span" sx={{ mr: 1, display: 'flex', alignItems: 'center' }}>
              {icon}
            </Box>
          )}
          <Typography
            variant="subtitle1"
            sx={{ fontSize: '1.2rem', ...(titleColor && { color: titleColor }) }}
          >
            {title}
          </Typography>
        </Box>
        <Typography
          variant="h4"
          gutterBottom
          sx={{ fontSize: '2rem', ...(totalColor && { color: totalColor }) }}
        >
          {total}
        </Typography>
        {stats.length > 0 && (
          <Grid container spacing={1} justifyContent="center">
            {stats.map((s, i) => (
              <Grid key={s.label} item xs={6}>
                <Typography
                  variant="caption"
                  sx={{ fontSize: '0.875rem', ...(statColors[i] && { color: statColors[i] }) }}
                >
                  {s.label}
                </Typography>
                <Typography
                  variant="h6"
                  sx={{ fontSize: '1rem', ...(statColors[i] && { color: statColors[i] }) }}
                >
                  {s.value}
                </Typography>
              </Grid>
            ))}
          </Grid>
        )}
      </CardContent>
    </Card>
  );
}

