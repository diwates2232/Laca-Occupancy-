// src/pages/Dashboard.jsx

import React from 'react';
import { Container, Grid, CardActionArea } from '@mui/material';
import { useNavigate } from 'react-router-dom';

import Header from '../components/Header';
import Footer from '../components/Footer';
import LoadingSpinner from '../components/LoadingSpinner';
import SummaryCard from '../components/SummaryCard';
import ChartCard from '../components/ChartCard';

import { useLiveOccupancy } from '../hooks/useLiveOccupancy';

export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const navigate = useNavigate();

  if (loading) return <LoadingSpinner />;
  if (error)   return <Container>Error loading data</Container>;

  const { today, realtime } = data;

  // Data for the bar chart
  const partitionData = Object.entries(realtime).map(([name, stats]) => ({
    name,
    value: stats.total
  }));

  // Cards for each partition
  const partitionCards = Object.entries(realtime).map(([name, stats]) => ({
    title: name,
    stats: [
      { label: 'Total',       value: stats.total },
      { label: 'Employees',   value: stats.Employee },
      { label: 'Contractors', value: stats.Contractor }
    ]
  }));

  return (
    <>
      <Header />
      <Container sx={{ mt: 2 }}>
        {/* Today's totals */}
        <SummaryCard
          title="Today's Headcount"
          stats={[
            { label: 'Total',       value: today.total },
            { label: 'Employees',   value: today.Employee },
            { label: 'Contractors', value: today.Contractor }
          ]}
        />

        {/* Overall realtime bar chart */}
        <ChartCard title="Realtime by Partition" data={partitionData} />

        {/* Summary cards for each partition; click into details */}
        <Grid container spacing={2} sx={{ mt: 2 }}>
          {partitionCards.map(card => (
            <Grid item xs={12} sm={6} md={4} key={card.title}>
              <CardActionArea
                onClick={() => navigate(`/realtime/${encodeURIComponent(card.title)}`)}
              >
                <SummaryCard title={card.title} stats={card.stats} />
              </CardActionArea>
            </Grid>
          ))}
        </Grid>
      </Container>
      <Footer />
    </>
  );
}





Read below error and solve this issue carefully and give me updated file carefully

Uncaught runtime errors:
×
ERROR
Grid is not defined
ReferenceError: Grid is not defined
    at Dashboard (http://localhost:3000/static/js/bundle.js:99394:92)
    at react-stack-bottom-frame (http://localhost:3000/static/js/bundle.js:60418:18)
    at renderWithHooks (http://localhost:3000/static/js/bundle.js:50628:20)
    at updateFunctionComponent (http://localhost:3000/static/js/bundle.js:52321:17)
    at beginWork (http://localhost:3000/static/js/bundle.js:52907:16)
    at runWithFiberInDEV (http://localhost:3000/static/js/bundle.js:48399:68)
    at performUnitOfWork (http://localhost:3000/static/js/bundle.js:54980:93)
    at workLoopSync (http://localhost:3000/static/js/bundle.js:54873:38)
    at renderRootSync (http://localhost:3000/static/js/bundle.js:54857:7)
    at performWorkOnRoot (http://localhost:3000/static/js/bundle.js:54621:42)





// src/pages/RealtimeDetails.jsx

import React from 'react';
import { Container, Typography, Button } from '@mui/material';
import Header from '../components/Header';
import Footer from '../components/Footer';
import LoadingSpinner from '../components/LoadingSpinner';
import DataTable from '../components/DataTable';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import { useParams, useNavigate } from 'react-router-dom';

const columns = [
  { field: 'ObjectName1', headerName: 'Name' },
  { field: 'Door', headerName: 'Door' },
  { field: 'Swipe_Time', headerName: 'Time' },
  { field: 'PersonnelType', headerName: 'Type' },
  // add more as desired
];

export default function RealtimeDetails() {
     const { partition } = useParams();            
  const { data, loading, error } = useLiveOccupancy(1000);

  if (loading) return <LoadingSpinner />;
  if (error)   return <Container><p>Error loading data</p></Container>;

  return (
    <>
      <Header />
      <Container sx={{ mt: 2 }}>

       <Button onClick={() => navigate(-1)} variant="outlined">
         ← Back to dashboard
       </Button>
       <Typography variant="h5" sx={{ my: 2 }}>
         Realtime details for “{partition}”
       </Typography>
        <DataTable columns={columns} rows={data.details} />


      </Container>
      <Footer />
    </>
  );
}

