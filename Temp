Lets check all below files and update it 

// src/components/Header.jsx

import React from 'react';
import { AppBar, Toolbar, Box, Typography, Select, MenuItem } from '@mui/material';
import { useNavigate, useLocation } from 'react-router-dom';
import WuLogo from '../assets/wu-logo.png';
import LacaFlag from '../assets/laca-flag.png';
import { partitionList } from '../services/occupancy.service';

export default function Header() {
  const navigate = useNavigate();
  const loc = useLocation();
  const currentPartition = loc.pathname.startsWith('/partition/')
    ? decodeURIComponent(loc.pathname.replace('/partition/',''))
    : '';

  return (
    <AppBar position="static" color="primary" sx={{ mb: 2 }}>

      <Toolbar sx={{ justifyContent: 'space-between' }}>
        <Box display="flex" alignItems="center">
          <Box component="img" src={WuLogo} alt="WU Logo" sx={{ height: 36, mr: 2 }} />
          <Typography variant="h6" sx={{ fontWeight: 600 }}>
             Western Union – LACA
            {currentPartition && <> • {currentPartition.replace('CR.Costa Rica Partition','Costa Rica')}</>}
          </Typography>
        </Box>
        <Box display="flex" alignItems="center">
          <Select
            size="small"
            value={currentPartition}
            displayEmpty
            onChange={e => {
              const p = e.target.value;
              if (p) navigate(`/partition/${encodeURIComponent(p)}`);
              else navigate('/');
            }}
            sx={{ bgcolor: 'background.paper', mr: 2 }}
          >
            <MenuItem value="">— Select Partition —</MenuItem>
            {partitionList.map(p => (
              <MenuItem key={p} value={p}>{p.replace('Partition','')}</MenuItem>
            ))}
          </Select>
          <Box component="img" src={LacaFlag} alt="LACA Flag" sx={{ height: 30 }} />
        </Box>
      </Toolbar>
    </AppBar>
  );
}




//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\App.jsx

import React from 'react';
import AppRoutes from './routes/AppRoutes';

export default function App() {
  return <AppRoutes />;
}




// src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import { ThemeProvider, CssBaseline } from '@mui/material';
import App from './App';
import reportWebVitals from './reportWebVitals';
import westernUnionTheme from './theme/westernUnionTheme';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <ThemeProvider theme={westernUnionTheme}>
    <CssBaseline />
    <App />
  </ThemeProvider>
);

reportWebVitals();



//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\routes\AppRoutes.jsx
import React from 'react';
import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';
import Dashboard from '../pages/Dashboard';
import RealtimeDetails from '../pages/RealtimeDetails';
import History from '../pages/History';
import PartitionDetail from '../pages/PartitionDetail';
import PartitionDetailDetails from '../pages/PartitionDetailDetails';

export default function AppRoutes() {
  return (
    <BrowserRouter>
      <Routes>

       {/* Overview page */}
        <Route
          path="/partition/:partition"
          element={<PartitionDetail />}
        />

       {/* NEW: Details page */}
       <Route
         path="/partition/:partition/details"
         element={<PartitionDetailDetails />}
       />



        <Route path="/" element={<Dashboard />} />
        
          <Route path="/partition/:partition" element={<PartitionDetail/>}/>
     <Route path="/realtime/:partition" element={<RealtimeDetails />} />
        <Route path="/history" element={<History />} />
        <Route path="*" element={<Navigate to="/" replace />} />
      </Routes>
    </BrowserRouter>
  );
}



//C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\api\occupancy.service.js
const BASE = process.env.REACT_APP_API_BASE || 'http://localhost:3001';

export async function fetchLiveSummary() {
  const res = await fetch(`${BASE}/api/occupancy/live-summary`);
  if (!res.ok) throw new Error(`Live summary fetch failed: ${res.status}`);
  return res.json();
}

export async function fetchHistory(location) {
  const url = location
    ? `${BASE}/api/occupancy/history/${encodeURIComponent(location)}`
    : `${BASE}/api/occupancy/history`;
  const res = await fetch(url);
  if (!res.ok) throw new Error(`History fetch failed: ${res.status}`);
  return res.json();
}





