Failed to compile.

[eslint]
src\pages\PartitionDetail.jsx
  Line 36:35:  'lookupFloor' is not defined  no-undef

Search for the keywords to learn more about each error.
WARNING in [eslint]
src\pages\PartitionDetail.jsx
  Line 25:10:  'details' is assigned a value but never used  no-unused-vars

ERROR in [eslint]
src\pages\PartitionDetail.jsx
  Line 36:35:  'lookupFloor' is not defined  no-undef

Search for the keywords to learn more about each error.

webpack compiled with 1 error and 1 warning

Read below files carefully and solve the issue and share us updated file carefully

//C:\Users\W0024618\Desktop\emea-occupancy-frontend\src\pages\PartitionDetail.jsx

import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Container, Box, Typography, Button } from '@mui/material';

import SummaryCard    from "../components/SummaryCard";
import ChartCard      from "../components/ChartCard";
import Header         from "../components/Header";
import Footer         from "../components/Footer";
import LoadingSpinner from "../components/LoadingSpinner";

import GroupIcon          from '@mui/icons-material/Group';
import TrackChangesIcon   from '@mui/icons-material/TrackChanges';
import PeopleIcon         from '@mui/icons-material/People';
import BusinessCenterIcon from '@mui/icons-material/BusinessCenter';

// import { lookupFloor } from '../utils/floorLookup';
import { fetchLiveSummary, fetchHistory } from '../api/occupancy.service';

export default function PartitionDetail() {
  const { partition } = useParams();
  const navigate = useNavigate();

  const [live, setLive]       = useState(null);
  const [history, setHistory] = useState(null);
  const [details, setDetails] = useState([]);
  const [lastUpdate, setLast] = useState('');

  // Live polling
  useEffect(() => {
    const iv = setInterval(async () => {
      const js = await fetchLiveSummary();
      setLive(js);
      setLast(new Date().toLocaleTimeString());
      const det = js.details
        .filter(r => r.PartitionName2 === partition && r.Direction === 'InDirection')
        .map(r => ({ ...r, floor: lookupFloor(r.PartitionName2, r.Door, r.Direction) }));
      setDetails(det);
    }, 1000);
    return () => clearInterval(iv);
  }, [partition]);

  // History once
  useEffect(() => {
    fetchHistory(partition).then(js => setHistory(js));
  }, [partition]);

  if (!live || !history) return <LoadingSpinner/>;

  const today = history.summaryByDate.at(-1).region;
  const siteLive = live.realtime[partition] || { total:0, Employee:0, Contractor:0, floors:{} };

  return (
    <>
      <Header/>
      <Container maxWidth={false} disableGutters sx={{ px:2, py:1 }}>
        <Button onClick={() => navigate(-1)}>‚Üê Back</Button>

        <Box display="flex" flexWrap="wrap" gap={1} my={2}>
          {[
            { title:'Today Total',    value:today.total,    icon:<GroupIcon/>,         border:'#FFD666' },
            { title:'Today Employees', value:today.Employee, icon:<PeopleIcon/>,        border:'#81C784' },
            { title:'Today Contractors',value:today.Contractor,icon:<BusinessCenterIcon/>,border:'#FFE599' },
            { title:'RT Total',        value:siteLive.total, icon:<TrackChangesIcon/>, border:'#FFF2CC' },
            { title:'RT Employees',    value:siteLive.Employee, icon:<PeopleIcon/>,       border:'#FFD666' },
            { title:'RT Contractors',  value:siteLive.Contractor, icon:<BusinessCenterIcon/>,border:'#FFE599' }
          ].map(c => (
            <Box key={c.title} sx={{ flex:'1 1 30%', minWidth:180 }}>
              <SummaryCard
                title={c.title}
                total={c.value}
                stats={[]}
                icon={c.icon}
                sx={{ height:100, border:`1px solid ${c.border}` }}
              />
            </Box>
          ))}
        </Box>

        <Box p={2} sx={{ border:'1px solid #FFC107' }}>
          <Box display="flex" justifyContent="space-between" mb={1}>
            <Typography variant="h6">Live Floor Counts</Typography>
            <Typography variant="body2">Last updated: {lastUpdate}</Typography>
          </Box>
          <ChartCard
            data={Object.entries(siteLive.floors).map(([floor,c])=>({ name:floor, value:c }))}
            dataKey="value"
            chartHeight={300}
          />
          <Box textAlign="right" mt={1}>
            <Button onClick={() => navigate(`/partition/${encodeURIComponent(partition)}/details`)}>
              See Details
            </Button>
          </Box>
        </Box>
      </Container>
      <Footer/>
    </>
  );
}
