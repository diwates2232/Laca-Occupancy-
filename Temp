// src/components/CompositeChartCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  LabelList,
  Cell
} from 'recharts';

const DARK_TO_LIGHT = [
  '#0D1B2A', '#1B263B', '#415A77', '#778DA9', '#E0E1DD',
  '#0F1C28', '#1F2D3D', '#3E556A', '#6B7C93', '#B8C1EC',
  '#16213E', '#21325E', '#415A77', '#6A7F9A', '#B0C4DE',
  '#1A1F36', '#2B3353', '#4C6482', '#7B90B2', '#CAD3E9'
];

export default function CompositeChartCard({
  title,
  data,
  lineColor = '#E57373',
  height = 300,
  animationDuration = 1500,
  animationEasing = 'ease-in-out'
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card sx={{ border: `1px solid ${lineColor}`, bgcolor: 'rgba(0,0,0,0.4)' }}>
        <CardContent>
          <Typography variant="subtitle1" align="center" color="text.secondary">
            {title}
          </Typography>
          <Typography variant="body2" align="center" sx={{ mt: 4 }}>
            No realtime employee data
          </Typography>
        </CardContent>
      </Card>
    );
  }

  // Enrich each datum with its usage percentage
  const enriched = data.map((d, i) => ({
    ...d,
    percentage: d.capacity ? Math.round(d.headcount / d.capacity * 100) : 0,
    _color: DARK_TO_LIGHT[i % DARK_TO_LIGHT.length]
  }));

  return (
    <Card
      sx={{
        border: `1px solid ${lineColor}`,
        borderRadius: 2,
        overflow: 'hidden',
        bgcolor: 'rgba(0,0,0,0.4)',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)'
        }
      }}
    >
      <CardContent sx={{ p: 1 }}>
        <Typography
          variant="subtitle1"
          align="center"
          gutterBottom
          color="text.primary"
        >
          {title}
        </Typography>
        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart
              data={enriched}
              margin={{ top: 10, right: 20, left: 0, bottom: 20 }}
            >
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />

              <XAxis
                dataKey="name"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
              />

              <YAxis
                yAxisId="left"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
              />

              <YAxis
                yAxisId="right"
                orientation="right"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
                domain={[0, 100]}
                tickFormatter={val => `${val}%`}
              />

              <Tooltip
                contentStyle={{ backgroundColor: '#222', borderColor: lineColor }}
                formatter={(value, name) => 
                  name === 'percentage' ? `${value}%` : value
                }
              />

              <Legend
                verticalAlign="top"
                wrapperStyle={{ color: 'rgba(255,255,255,0.8)' }}
              />

              {/* Headcount bars with per-bar colors & percentage labels */}
              <Bar
                yAxisId="left"
                dataKey="headcount"
                name="Headcount"
                barSize={20}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              >
                {enriched.map((entry, idx) => (
                  <Cell key={`cell-${idx}`} fill={entry._color} />
                ))}
                <LabelList
                  dataKey="percentage"
                  position="top"
                  formatter={val => `${val}%`}
                  style={{ fill: '#fff', fontSize: 10, fontWeight: 600 }}
                />
              </Bar>

              {/* Seat Capacity line */}
              <Line
                yAxisId="right"
                type="monotone"
                dataKey="percentage"
                name="Usage %"
                stroke={lineColor}
                strokeWidth={2}
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />

              {/* Optional: draw capacity as second line */}
              <Line
                yAxisId="left"
                type="monotone"
                dataKey="capacity"
                name="Seat Capacity"
                stroke="#81C784"
                strokeDasharray="5 5"
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />
            </ComposedChart>
          </ResponsiveContainer>
        </Box>
      </CardContent>
    </Card>
  );
}









In This card the Building capacity is not displaying 
also add legends and details Where display pecentage as well headcount details 
per Floor Wise
also 
for bar Colours use colours like dark to faint colour theme 
use unique Colour for each barthere are 10 floor so We need define 20 colour plate dark to faint 

update this part then We will move next section




// src/components/CompositeChartCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend
} from 'recharts';

export default function CompositeChartCard({
  title,
  data,
  barColor = '#FFC107',
  lineColor = '#E57373',
  height = 300,
  animationDuration = 1500,
  animationEasing = 'ease-in-out'
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card sx={{ border: `1px solid ${barColor}`, bgcolor: 'rgba(0,0,0,0.4)' }}>
        <CardContent>
          <Typography variant="subtitle1" align="center" color="text.secondary">
            {title}
          </Typography>
          <Typography variant="body2" align="center" sx={{ mt: 4 }}>
            No realtime employee data
          </Typography>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card
      sx={{
        border: `1px solid ${barColor}`,
        borderRadius: 2,
        overflow: 'hidden',
        bgcolor: 'rgba(0,0,0,0.4)',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)'
        }
      }}
    >
      <CardContent sx={{ p: 1 }}>
        <Typography variant="subtitle1" align="center" gutterBottom color="text.primary">
          {title}
        </Typography>
        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart data={data} margin={{ top: 10, right: 20, left: 0, bottom: 20 }}>
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
              <XAxis dataKey="name" tickLine={false} axisLine={false} stroke="rgba(255,255,255,0.6)" />
              <YAxis
                yAxisId="left"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
              />
              <YAxis
                yAxisId="right"
                orientation="right"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
              />
              <Tooltip
                contentStyle={{
                  backgroundColor: '#222',
                  borderColor: barColor
                }}
              />
              <Legend verticalAlign="top" wrapperStyle={{ color: 'rgba(255,255,255,0.8)' }} />
              
              <Bar
                yAxisId="left"
                dataKey="headcount"
                name="Headcount"
                barSize={504}
                fill={barColor}
                radius={[4, 4, 0, 0]}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
                onMouseOver={e => e && (e.fillOpacity = 0.8)}
                onMouseOut={e => e && (e.fillOpacity = 1)}
              />

              <Line
                yAxisId="right"
                type="monotone"
                dataKey="capacity"
                name="Seat Capacity"
                stroke={lineColor}
                strokeWidth={3}
                dot={{ r: 6, stroke: '#fff', strokeWidth: 2 }}
                activeDot={{ r: 8 }}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />
            </ComposedChart>
          </ResponsiveContainer>
        </Box>
      </CardContent>
    </Card>
  );
}
