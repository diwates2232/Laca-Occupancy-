Now Lets Work on this only

add here Standerd 15 colours plates use unique colours pair for each var or line .


const wuPalette = {
  gold:   '#FFC107',
  black:  '#000000',
  accent: '#E57373',
};


Now In one row display 2 chart cards and Brazil Panama Peru display Below 
so Adjust Size in One Row Increase Height of chart ,


For Brazil Panama Peru Build pie Chart alwayes display When Count is 0 per chart does not display anything , so When Count is 0 still display Pie chart and display thire Seat Capacity until Count is not increase .

   {/* Partition detail widgets */}
        {loading ? (
          <Skeleton variant="rectangular" width="100%" height={400}/>
        ) : (
          <Box mt={4} display="flex" flexWrap="wrap" gap={1} justifyContent="space-between">

            {/* Costa Rica (composite) */}
            <Box sx={{ flex:'1 1 calc(48% - 8px)', minWidth:300 }}>
              <CompositeChartCard
                key="CR"
                title="Costa Rica"
                data={
                  Object.entries(
                    partitions.find(p=>p.name==='CR.Costa Rica Partition').floors
                  ).map(([floor,cnt])=>({
                    name: floor.trim(),
                    headcount: cnt,
                    capacity:  seatCapacities[`Costa Rica-${floor.trim()}`]||0
                  }))
                }
              />
            </Box>

            {/* Argentina (line) */}
            <Box sx={{ flex:'1 1 calc(48% - 8px)', minWidth:300 }}>
              <LineChartCard
                key="AR"
                title="Argentina"
                data={
                  Object.entries(
                    partitions.find(p=>p.name==='AR.Cordoba').floors
                  ).map(([floor,cnt])=>({
                    name: floor.trim(),
                    headcount: cnt,
                    capacity:  seatCapacities[`Argentina-${floor.trim()}`]||0
                  }))
                }
              />
            </Box>

            {/* Combined Pie (other four) */}
            <Box sx={{ flex:'1 1 calc(48% - 8px)', minWidth:300 }}>
              <PieChartCard
                key="others"
                title="Brazil Panama Peru"
                data={
                  partitions
                    .filter(p => !['CR.Costa Rica Partition','AR.Cordoba'].includes(p.name))
                    .map(p => ({
                      name: displayNameMap[p.name]||p.name.split('.').pop(),
                      value: p.total
                    }))
                }
                colors={[wuPalette.gold, wuPalette.accent, wuPalette.black, '#81C784']}
              />
            </Box>

          </Box>
        )}
      </Container>




C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\CompositeChartCard.jsx


// src/components/CompositeChartCard.jsx
import React from 'react';
import { Card, CardContent, Typography } from '@mui/material';
import {
  ComposedChart, Bar, Line, XAxis, YAxis, Tooltip,
  ResponsiveContainer, CartesianGrid, Legend
} from 'recharts';

export default function CompositeChartCard({ title, data, capacityLine }) {
  return (
    <Card sx={{ flex: '1 1 16%', minWidth: 240 }}>
      <CardContent>
        <Typography variant="subtitle1" align="center" gutterBottom>{title}</Typography>
        <ResponsiveContainer width="100%" height={220}>
          <ComposedChart data={data} margin={{ top: 10, right: 10, left: 0, bottom: 20 }}>
            <CartesianGrid strokeDasharray="3 3" stroke="#eee"/>
            <XAxis dataKey="name" tickLine={false} axisLine={false} />
            <YAxis yAxisId="left" tickLine={false} axisLine={false} />
            <YAxis yAxisId="right" orientation="right" tickLine={false} axisLine={false} />
            <Tooltip/>
            <Legend verticalAlign="top" height={24}/>
            <Bar
              yAxisId="left"
              dataKey="headcount"
              name="Headcount"
              barSize={20}
              fill="#FFC107"
              radius={[4,4,0,0]}
            />
            <Line
              yAxisId="right"
              dataKey="capacity"
              name="Seat Capacity"
              stroke="#E57373"
              strokeWidth={2}
              dot={false}
            />
          </ComposedChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
}





C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\LineChartCard.jsx

// src/components/LineChartCard.jsx
import React from 'react';
import { Card, CardContent, Typography } from '@mui/material';
import {
  LineChart, Line, XAxis, YAxis, Tooltip,
  ResponsiveContainer, CartesianGrid, Legend
} from 'recharts';

export default function LineChartCard({ title, data, capacityLine }) {
  return (
    <Card sx={{ flex: '1 1 16%', minWidth: 240 }}>
      <CardContent>
        <Typography variant="subtitle1" align="center" gutterBottom>{title}</Typography>
        <ResponsiveContainer width="100%" height={220}>
          <LineChart data={data} margin={{ top: 10, right: 10, left: 0, bottom: 20 }}>
            <CartesianGrid strokeDasharray="3 3" stroke="#eee" />
            <XAxis dataKey="name" tickLine={false} axisLine={false}/>
            <YAxis tickLine={false} axisLine={false}/>
            <Tooltip/>
            <Legend verticalAlign="top" height={24}/>
            <Line
              type="monotone"
              dataKey="headcount"
              name="Headcount"
              stroke="#FFC107"
              strokeWidth={2}
              dot={{ r: 3 }}
            />
            <Line
              type="monotone"
              dataKey="capacity"
              name="Seat Capacity"
              stroke="#000"
              strokeDasharray="5 5"
              dot={false}
            />
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
}




C:\Users\W0024618\Desktop\laca-occupancy-frontend\src\components\PieChartCard.jsx

// src/components/LineChartCard.jsx
import React from 'react';
import { Card, CardContent, Typography } from '@mui/material';
import {
  LineChart, Line, XAxis, YAxis, Tooltip,
  ResponsiveContainer, CartesianGrid, Legend
} from 'recharts';

export default function LineChartCard({ title, data, capacityLine }) {
  return (
    <Card sx={{ flex: '1 1 16%', minWidth: 240 }}>
      <CardContent>
        <Typography variant="subtitle1" align="center" gutterBottom>{title}</Typography>
        <ResponsiveContainer width="100%" height={220}>
          <LineChart data={data} margin={{ top: 10, right: 10, left: 0, bottom: 20 }}>
            <CartesianGrid strokeDasharray="3 3" stroke="#eee" />
            <XAxis dataKey="name" tickLine={false} axisLine={false}/>
            <YAxis tickLine={false} axisLine={false}/>
            <Tooltip/>
            <Legend verticalAlign="top" height={24}/>
            <Line
              type="monotone"
              dataKey="headcount"
              name="Headcount"
              stroke="#FFC107"
              strokeWidth={2}
              dot={{ r: 3 }}
            />
            <Line
              type="monotone"
              dataKey="capacity"
              name="Seat Capacity"
              stroke="#000"
              strokeDasharray="5 5"
              dot={false}
            />
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
}



