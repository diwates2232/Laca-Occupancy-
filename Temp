// src/pages/Dashboard.jsx
import React, { … } from 'react';
+ import seatCapacities from '../data/seatCapacities';      // ✱ your seatCapacities map

// …inside your render, where you build chartData:
- const chartData = partitions.map((p, i) => ({
-   name: …,
-   value: p.total,
-   breakdown: { … },
-   fill: …
- }));
+ const chartData = partitions.map((p, i) => {
+   const name = displayNameMap[p.name] || p.name.replace(' Partition','');
+   const headcount = p.total;
+   const capacity  = seatCapacities[name] ?? 0;            // look up seats
+   const pct       = capacity ? Math.round(headcount / capacity * 100) : 0;
+   return {
+     name,
+     Headcount: headcount,
+     Capacity:  capacity,
+     percentage: pct,                                     // for tooltips
+     fill: colorsMap[p.name]?.[0] || '#FFC107',
+     breakdown: {
+       Employees:  p.Employee,
+       Contractors: p.Contractor,
+       ...(p.TempBadge ? { 'Temp Badge': p.TempBadge } : {}),
+       Capacity,                                           // include absolute
+       'Load %': pct + '%'                                // include %
+     }
+   };
+ });

// …and when you render <ChartCard>:
<ChartCard
  title="Live Totals vs Seats"
  data={chartData}
- dataKey="value"
+ dataKey="Headcount"             // plot the live count
  chartHeight={360}
- colors={{ head: '#FFC107', cap: '#B0BEC5' }}
+ colors={{ head: '#2E86AB', cap: '#E74C3C' }}
  // no need for breakdown prop—our data.breakdown is used by the tooltip
/>





// src/pages/PartitionDetail.jsx
import React, { … } from 'react';
+ import buildingCapacities from '../data/buildingCapacities';  // see below

// add a new file:
// src/data/buildingCapacities.js
export default {
  'Building A1':  33,
  'Building A2': 160,
  'Building A3': 157,
  'Building B2': 173,
  'Building B3': 160,
  'Building E2': 115,
  'Building E3': 140,
  'Building E4': 160,
  'Building F4': 146
};

export default function PartitionDetail() {
  // … after you fetch liveSummary and compute `live.floors`:
  const floorEntries = Object.entries(live.floors).map(([floor, cnt]) => {
    const cap = buildingCapacities[floor.trim()] ?? 0;
    const pct = cap ? Math.round(cnt / cap * 100) : 0;
    return {
      name: floor.trim(),
      Headcount: cnt,
      Capacity: cap,
      percentage: pct,
      breakdown: {
        Headcount: cnt,
        Capacity: cap,
        'Load %': pct + '%'
      }
    };
  });

  // …then render:
  <Box mt={4} sx={{ p:2, border: '2px solid #FFC107' }}>
    <Typography variant="h6">Live Floor Counts vs Capacity</Typography>
    <ChartCard
      data={floorEntries}
      dataKey="Headcount"
      chartHeight={320}
      colors={{ head: '#28B463', cap: '#CB4335' }}
      axisProps={{
        xAxis: { angle: -45, textAnchor: 'end' },
      }}
    />
  </Box>
}










// src/data/seatCapacities.js
const seatCapacities = {
  "Costa Rica": 1244,
  "Mexico": 100,
  "Argentina": 250,
  "Panama": 20,
  "Peru": 70,
  "Brazil": 80
};

export default seatCapacities;



above is seat capacities for partation and 

Building	Floor Capacity of Costa Rica 

Building A1	33
Building A2	160
Building A3	157
Building B2	173
Building B3	160
Building E2	115
Building E3	140
Building E4	160
Building F4	146


